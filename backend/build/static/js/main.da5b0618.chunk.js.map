{"version":3,"sources":["Store.js","utils/setHeaders.js","components/AppBar/index.jsx","components/PrivateRoute/index.jsx","components/Homepage/TopMenu.jsx","Views/Homepage/index.jsx","components/NegativeMessage.js","components/Login.js","components/Register.js","components/RegisterOrLogin.js","Views/Login/index.jsx","components/Teams/Teams.jsx","components/Teams/TeamCreate.jsx","components/Leagues/LeaguesTable.jsx","utils/date.js","components/Modals/AskModal.jsx","components/Teams/TeamViewGrid.jsx","components/Teams/TeamViewGridWithSearch.jsx","components/Leagues/LeaguesTableRowOpen.jsx","components/Leagues/LeaguesTableRowPending.jsx","components/Leagues/LeaguesTableRowClosed.jsx","components/Leagues/LeaguesTableRowOwner.jsx","components/Teams/TeamViewLeagues.jsx","components/Teams/TeamView.jsx","components/Teams/index.jsx","Views/Teams/index.jsx","components/SubPage/index.jsx","components/NewLeague.js","Views/NewLeague/index.jsx","Views/Leagues/index.jsx","components/Schedule/TableRow.jsx","components/Schedule/ScheduleTable.jsx","components/Schedule/DropdownLeague.jsx","components/Schedule/DropdownRole.jsx","components/Schedule/DropdownStatus.jsx","Views/Schedule/index.jsx","components/Loader/index.jsx","components/Scores/Scores.jsx","components/Scores/ScoresView.jsx","Views/Scores/index.jsx","components/Homepage/Profile.jsx","index.js"],"names":["Context","React","createContext","StoreProvider","state","isLogged","localStorage","getItem","me","changeStore","name","value","setState","Provider","this","props","children","Component","headers","AppBar","useContext","Store","className","alt","src","Menu","secondary","Item","as","Link","to","style","color","fontWeight","fontSize","NavLink","activeClassName","exact","position","_id","onClick","removeItem","PrivateRoute","component","rest","render","TopMenu","activeItem","handleItemClick","e","isMe","context","attached","tabular","widths","active","Icon","contextType","Home","Segment","NegativeMessage","Message","negative","Header","header","paragraph","defaultProps","Login","onFormSubmit","a","preventDefault","termEmail","termPass","email","password","fetch","method","body","JSON","stringify","response","status","token","get","setItem","jwt","json","invalidData","Form","onSubmit","Input","type","label","placeholder","onChange","target","Button","Register","nickname","passwordr","surname","division","divisions","getDivisions","axios","data","filter","map","text","description","console","error","onFormChange","nick","pass","alert","catch","err","log","selected","Select","options","Field","Checkbox","RegisterOrLogin","showLoginBox","isLoginOpen","isRegisterOpen","showRegisterBox","Teams","_gt","_getTeams","ret","teams","sort","b","toLowerCase","length","team","teamId","key","teamsAll","players","first","second","statistics","matches","won","lost","goals","for","against","leagues","_updateUserTeams","userId","url","user","indexOf","push","then","res","users","el","errmsg","resType","role","TeamCreate","onInputChange","errHeader","errMessage","newTeam","onSelectChange","player1","player2","d","_validateForm","_postTeam","onClickCancel","term","warnHeader","warnMessage","infoHeader","infoMessage","postSuccess","onClickDalej","teamOK","playersOK","getUsers","Group","horizontal","Label","inline","Dropdown","selection","v","content","warning","success","LeaguesTable","refresh","query","componentDidMount","Table","celled","textAlign","Row","x","HeaderCell","width","Body","row","formatDate","moment","format","AskModal","Modal","open","onClose","closeOnDimmerClick","size","Content","Actions","onPositive","positive","labelPosition","icon","onNegative","TeamViewGridItem","unpackMatches","unpackGoals","isPlayerInLeague","Description","player","TeamViewGridRow","Grid","Column","onClickFactory","TeamViewGrid","columns","_","chunk","i","initialState","isLoading","results","TeamViewGridWithSearch","handleSearchChange","setTimeout","re","RegExp","escapeRegExp","result","test","teamViewGridProps","centered","Search","loading","onSearchChange","debounce","leading","input","prepareTeams","league","unpackPlayer","TeamViewModal","askModalProps","openModalFactory","closeModal","setHeaders","id","finally","closeIcon","scrolling","LeaguesTableRowOpen","isModalOpen","openModal","resp","dateCreated","date","created","Cell","owner","isUserInLeague","ribbon","userTeamInLeague","LeaguesTableRowPending","dateStarted","started","LeaguesTableRowClosed","dateClosed","closed","LeaguesTableRowOwner","openModalStartLeague","leagueName","openModalScheduleLeague","openModalCloseLeague","selectLabels","labels","LeaguesTableInTeamView","fetchLeagues","ComponentTeamViewLeagues","config","LeaguesTableClosed","TeamView","index","teamsAllIndex","stats","onClickEdit","editable","onClickVerify","onClickDelete","Divider","readOnly","info","colSpan","floated","ComponentTeams","paddingLeft","stretched","fluid","vertical","SubPageRouter","routing","path","SubPageMenu","SubPage","NewLeague","startDate","postSuccessful","handleInputChange","event","handleDateChange","postLeague","message","control","minDate","Date","now","placeholderText","TextArea","maxLength","CreateLeague","queryLeaguesTableOpen","inLeague","teamName","LeaguesTableOpen","LeaguesTablePending","LeaguesTableOwner","Leagues","match","TableRow","myGame","scheduled","substring","collapsing","isEditable","ScheduleTable","myTeams","includes","getData","DropdownLeague","triggerChange","DropdownRole","DropdownStatus","amIPlayingThisLeague","y","ScheduleView","leaguesChoice","chosenLeague","onStatusChange","onChangeLeagueFilter","onRoleChange","onLeagueChange","tempLeagues","obj","myName","filterMyTeams","Loader","Dimmer","Scores","gl","getLeagues","leagueId","leagueAll","actualTeam","points","matchesPlayed","matchesWon","matchesLost","goalsFor","goalsAgainst","ScoresView","handleSort","clickedColumn","column","direction","reverse","sortBy","leagueAllIndex","prepareState","newStateData","sortable","fixed","sorted","ShowScores","Profile","ReactDOM","useState","setLoading","useEffect","Container","Schedule","document","querySelector"],"mappings":"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","file":"static/js/main.da5b0618.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport class StoreProvider extends React.Component {\r\n  state = { isLogged: localStorage.getItem('token') ? true : false, me: null };\r\n\r\n  changeStore = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={{ ...this.state, changeStore: this.changeStore }}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Context;\r\n","export default () => ({\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'x-auth-token': localStorage.getItem('token'),\r\n  },\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport Store from '../../Store';\r\n\r\n\r\nconst AppBar = () => {\r\n  const { isLogged, changeStore, me } = useContext(Store);\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('id');\r\n    changeStore('isLogged', false);\r\n    changeStore('me', null);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"center\">\r\n        <img alt=\"nie ma obrazka\" src=\"/images/nowelogo.jpg\" />\r\n      </div>\r\n      <Menu secondary>\r\n        <Menu.Item as={Link}   to=\"/\" >\r\n          <p style={{color: '#373c8d', fontWeight: 'bold', fontSize: 'large'}}>\r\n            PANkarzyki</p>\r\n        </Menu.Item>\r\n\r\n        {isLogged && (\r\n          <>\r\n          <Menu.Menu>\r\n            <Menu.Item as={NavLink} name=\"Główna\" to=\"/\" activeClassName=\"active\" exact />\r\n            <Menu.Item as={NavLink} name=\"Terminarz\" to=\"/Schedule\" activeClassName=\"active\" />\r\n            <Menu.Item as={NavLink} name=\"Ligi\" to=\"/Leagues\" activeClassName=\"active\" />\r\n            <Menu.Item as={NavLink} name=\"Drużyny\" to=\"/Teams\" activeClassName=\"active\" />\r\n            {/* <Menu.Item as={NavLink} name=\"Nowa Liga\" to=\"/NewLeague\" activeClassName=\"active\" /> */}\r\n            <Menu.Item as={NavLink} name=\"Wyniki\" to=\"/Scores\" activeClassName=\"active\" />\r\n          </Menu.Menu>\r\n          <Menu.Menu position=\"right\">\r\n            <Menu.Item as={Link} name= {me ? me._id: 'user' } to=\"/Profile\" />\r\n            <Menu.Item as={Link} name=\"Wyjdź\" to=\"/\" onClick={handleLogout} />\r\n          </Menu.Menu>\r\n          </>\r\n        )}\r\n        \r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport Store from '../../Store';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isLogged } = useContext(Store);\r\n  return <Route {...rest} render={props => (isLogged ? <Component {...props} /> : <Redirect to=\"/login\" />)} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'semantic-ui-react';\r\nimport Store from '../../Store';\r\n// import News from './News'\r\n\r\nclass TopMenu extends Component {\r\n  state = { activeItem: 'news' }\r\n\r\n  static contextType = Store;\r\n\r\n  componentDidMount() {\r\n    this.setState(() => { return { isMe: this.context.me }; });\r\n    // console.log(this)\r\n    // console.log(this.context.me);\r\n\r\n    // console.log(this.context.me.division);\r\n  }\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Menu attached='top' tabular widths={2}>\r\n          <Menu.Item\r\n            name=\"news\"\r\n            active={activeItem === 'news'}\r\n            onClick={this.handleItemClick}\r\n          >\r\n            <Icon name=\"user\" />\r\n            Aktualności\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            name=\"profile\"\r\n            active={activeItem === 'profile'}\r\n            onClick={this.handleItemClick}\r\n          >\r\n            <Icon name=\"user\" />\r\n            Profil użytkownika\r\n            {/* {me.name + \" \" + me.surname} */}\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopMenu;\r\n","import React from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport { TopMenu } from '../../components/Homepage';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Segment>\r\n      <TopMenu></TopMenu>\r\n      <main>\r\n        <p>\r\n          \r\n       </p>\r\n      </main>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nconst NegativeMessage = props => (\r\n  <Message negative>\r\n    <Message.Header>{props.header}</Message.Header>\r\n    <p>{props.paragraph}</p>\r\n  </Message>\r\n);\r\n\r\nNegativeMessage.defaultProps = {\r\n  header: 'Błąd!',\r\n  paragraph: 'Spróbuj ponownie',\r\n};\r\n\r\nexport default NegativeMessage;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport NegativeMessage from './NegativeMessage';\r\nimport jwt from 'jwt-decode';\r\n\r\nimport Store from '../Store';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isLogged: false, invalidData: false, termEmail: '', termPass: '' };\r\n  }\r\n\r\n  static contextType = Store;\r\n\r\n  onFormSubmit = async e => {\r\n    e.preventDefault();\r\n    const [email, password] = [this.state.termEmail, this.state.termPass];\r\n\r\n    const response = await fetch('/api/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    if (response.status === 200) {\r\n      const token = response.headers.get('x-auth-token');\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('id', jwt(token)._id);\r\n      await response.json();\r\n      this.context.changeStore('isLogged', true);\r\n      this.setState({ isLogged: true });\r\n    } else {\r\n      this.setState({ invalidData: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.context.isLogged) return <Redirect to=\"/\" />;\r\n    return (\r\n      <Segment>\r\n        Logowanie\r\n        {this.state.invalidData && <NegativeMessage header=\"Błędny email lub hasło\" />}\r\n        <Form onSubmit={this.onFormSubmit}>\r\n          <Form.Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            placeholder=\"Email\"\r\n            value={this.state.termEmail}\r\n            onChange={e => this.setState({ termEmail: e.target.value })}\r\n          />\r\n          <Form.Input\r\n            type=\"password\"\r\n            label=\"Hasło\"\r\n            placeholder=\"Hasło\"\r\n            value={this.state.termPass}\r\n            onChange={e => this.setState({ termPass: e.target.value })}\r\n          />\r\n          <Button type=\"submit\">Zaloguj!</Button>\r\n        </Form>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, Checkbox, Form, Segment } from 'semantic-ui-react';\r\nimport Store from '../Store';\r\nimport NegativeMessage from './NegativeMessage';\r\nimport axios from 'axios';\r\n\r\nclass Register extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getDivisions().catch( err => {\r\n      console.log('getDivisions:', err);\r\n      this.setState( () => { return {divisions: [\r\n        { text: 'Wrocek', value: 'WRO', selected: true },\r\n        { text: 'Warszawka', value: 'WAR' },\r\n        { text: 'Kraków', value: 'KRA' },\r\n      ]}; } )\r\n    } )\r\n  };\r\n\r\n  state = {\r\n    nickname: '',\r\n    email: '',\r\n    password: '',\r\n    passwordr: '',\r\n    name: '',\r\n    surname: '',\r\n    division: 'WRO',\r\n    divisions: [],\r\n    invalidData: false\r\n  };\r\n\r\n  static contextType = Store;\r\n\r\n  getDivisions = async () => {\r\n    try {\r\n      const { data } = await axios.get('/api/division');\r\n      const divisions = data.filter(({ status }) => status !== 'deleted').map(({ _id, description }) => ({ value: _id, text: description }));\r\n      this.setState({ divisions });\r\n    } catch (ex) {\r\n      console.error(ex);\r\n    }\r\n  };\r\n\r\n \r\n  onFormChange = ({ target }, { name, value }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onFormSubmit = async e => {\r\n    e.preventDefault();\r\n    const [nick, email, pass, , name, surname] = e.target;\r\n\r\n    const response = await fetch('/api/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: email.value,\r\n        password: pass.value,\r\n        nickname: nick.value,\r\n        name: name.value,\r\n        surname: surname.value,\r\n        division: this.state.division,\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      alert('Konto utworzone');\r\n      const response = await fetch('api/login',{\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          email: email.value,\r\n          password: pass.value\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const token = response.headers.get('x-auth-token');\r\n      localStorage.setItem('token',token);\r\n      await response.json();\r\n      this.context.changeStore('isLogged', true);\r\n    } else {\r\n      this.setState({ invalidData: true});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.context.isLogged) return <Redirect to=\"/\" />;\r\n    return (\r\n      <Segment>\r\n        {this.state.invalidData && <NegativeMessage header=\"Coś poszło nie tak. Spróbuj ponownie wypełnić formularz\" />}\r\n        <Form onSubmit={this.onFormSubmit}>\r\n          <Form.Input name=\"nickname\" label=\"Nick\" placeholder=\"Nick\" onChange={this.onFormChange} />\r\n          <Form.Input name=\"email\" type=\"email\" label=\"Email\" placeholder=\"Email\" onChange={this.onFormChange} />\r\n          <Form.Input type=\"password\" label=\"Hasło\" placeholder=\"Hasło\" onChange={this.onFormChange} />\r\n          <Form.Input type=\"password\" label=\"Powtórz hasło\" placeholder=\"Powtórz hasło\" onChange={this.onFormChange} />\r\n          <Form.Input label=\"Imie\" placeholder=\"Imie\" onChange={this.onFormChange} />\r\n          <Form.Input label=\"Nazwisko\" placeholder=\"Nazwisko\" onChange={this.onFormChange} />\r\n          <Form.Select\r\n            name=\"division\"\r\n            options={this.state.divisions}\r\n            label=\"Dywizja\"\r\n            value={this.state.division}\r\n            onChange={this.onFormChange}\r\n          />\r\n          <Form.Field>\r\n            <Checkbox label=\"Akceptuje regulamin i zgadzam się z warunkami użytkowania\" />\r\n          </Form.Field>\r\n          <Button type=\"submit\">Rejestruj!</Button>\r\n        </Form>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport { Button, Segment } from 'semantic-ui-react';\r\n\r\nclass RegisterOrLogin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isLoginOpen: true, isRegisterOpen: false };\r\n  }\r\n\r\n  showLoginBox = () => {\r\n    this.setState({ isLoginOpen: true, isRegisterOpen: false });\r\n  };\r\n\r\n  showRegisterBox = () => {\r\n    this.setState({ isLoginOpen: false, isRegisterOpen: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <br/><br/>\r\n        <h3>\r\n          O co chodzi? Gramy ligę!! Dobierz się w drużynę, zapisz do rozgrywek, zapisuj wyniki, sprawdzaj kto kogo złoił. Wyłonimy zwycięzcę! :) Wanna Join?\r\n        </h3>\r\n        <br/><br/>\r\n        <Segment>\r\n          <Button onClick={this.showLoginBox}>Logowanie</Button>\r\n          <Button onClick={this.showRegisterBox}>Rejestracja</Button>\r\n        </Segment>\r\n        <Segment>\r\n          {this.state.isLoginOpen && <Login />}\r\n          {this.state.isRegisterOpen && <Register />}\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterOrLogin;\r\n","import React from 'react';\r\nimport RegisterOrLogin from '../../components/RegisterOrLogin';\r\n\r\nconst Login = () => {\r\n  return <RegisterOrLogin />;\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Store from '../../Store';\r\n\r\nclass Teams extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isMe: false\r\n    }\r\n  }\r\n\r\n  static contextType = Store;\r\n\r\n  componentDidMount() {\r\n    this.setState(() => { return { isMe: !!this.context.me }; });\r\n    // console.log('Teams->', this.context);\r\n  }\r\n\r\n  async getUsers(division = '') {\r\n    await axios(\r\n      {\r\n        url: `/api/users?division=${this.context.me.division}`,\r\n        method: 'get',\r\n        data: {},\r\n        headers:\r\n        {\r\n          'x-auth-token': localStorage.token\r\n        }\r\n      }\r\n    ).then(\r\n      (res) => {\r\n        this.users = res.data.map((el) => {\r\n          return {\r\n            key: el._id,\r\n            value: `${el.surname}, ${el.name}`,\r\n            text: `${el._id}: ${el.surname || '(brak)'}, ${el.name || '(brak)'}`\r\n          };\r\n        }).sort((a, b) => { return (a.text.toLowerCase() < b.text.toLowerCase()) ? -1 : 1; });\r\n      },\r\n      (err) => { console.log('getUsers->', err.errmsg); }\r\n    )\r\n  }\r\n\r\n  async _getTeams(resType = 'names', id) {\r\n    let ret;\r\n    await axios(\r\n      {\r\n        url: `/api/teams/`,\r\n        method: 'get',\r\n        data: {},\r\n        headers:\r\n        {\r\n          'x-auth-token': localStorage.token\r\n        }\r\n      }\r\n    ).then(\r\n      (res) => {\r\n        switch (resType) {\r\n          case 'names':\r\n            ret = res.data.map((el) => { return el.name; });\r\n            break;\r\n          case 'forSelect':\r\n            if (this.context.me.role === 'admin') {\r\n              ret = res.data.map((el) => {\r\n                return {\r\n                  key: el._id,\r\n                  value: el.name,\r\n                  text: el.name\r\n                };\r\n              });\r\n            } else {\r\n              ret = res.data\r\n                .filter((el) => {\r\n                  return (el.players.first._id === this.context.me._id) || (el.players.second._id === this.context.me._id);\r\n                })\r\n                .map((el) => {\r\n                  return {\r\n                    key: el._id,\r\n                    value: el.name,\r\n                    text: el.name\r\n                  };\r\n                });\r\n              // if (ret.length === 0) {\r\n              //   ret = [{\r\n              //     key: '0',\r\n              //     value: '',\r\n              //     text: ''\r\n              //   }]\r\n              // }\r\n            }\r\n            break;\r\n          case 'all':\r\n            if (this.context.me.role === 'admin') {\r\n              ret = res.data;\r\n            } else {\r\n              ret = res.data.filter((el) => {\r\n                return (el.players.first._id === this.context.me._id) || (el.players.second._id === this.context.me._id);\r\n              });\r\n            }\r\n            break;\r\n          default:\r\n            if (this.context.me.role === 'admin') {\r\n              ret = res.data.map((el) => { return el.name; });\r\n            } else {\r\n              ret = res.data\r\n                .filter((el) => {\r\n                  return (el.players.first._id === this.context.me._id) || (el.players.second._id === this.context.me._id);\r\n                })\r\n                .map((el) => { return el.name; });\r\n            }\r\n        };\r\n      },\r\n      // (err) => { console.log('_getTeams->', err.errmsg); }\r\n      (err) => { console.log('_getTeams->', err); }\r\n    )\r\n    return ret;\r\n  }\r\n\r\n  _gt = async (type) => {\r\n    let ret;\r\n    try {\r\n      ret = await this._getTeams(type);\r\n      switch (type) {\r\n        case 'forSelect':\r\n          this.teams = ret;\r\n          this.teams.sort((a, b) => { return (a.text.toLowerCase() < b.text.toLowerCase()) ? -1 : 1; });\r\n          this.setState(\r\n            () => {\r\n              if (this.teams.length === 0) {\r\n                return {\r\n                  team: '',\r\n                  teamId: ''\r\n                }\r\n              } else {\r\n                return {\r\n                  team: this.teams[0].text,\r\n                  teamId: this.teams[0].key\r\n                }\r\n              }\r\n            }\r\n          );\r\n          break;\r\n        case 'all':\r\n          this.teamsAll = ret;\r\n          this.teamsAll.sort((a, b) => { return (a.name.toLowerCase() < b.name.toLowerCase()) ? -1 : 1; });\r\n          this.setState(\r\n            () => {\r\n              if (this.teamsAll.length === 0) {\r\n                return {\r\n                  players: {\r\n                    first: {\r\n                      _id: '',\r\n                      name: ''\r\n                    },\r\n                    second: {\r\n                      _id: '',\r\n                      name: ''\r\n                    }\r\n                  },\r\n                  statistics: {\r\n                    matches: {\r\n                      won: 0,\r\n                      lost: 0\r\n                    },\r\n                    goals: {\r\n                      for: 0,\r\n                      against: 0\r\n                    }\r\n                  },\r\n                  leagues: []\r\n                }\r\n              } else {\r\n                return {\r\n                  players: {\r\n                    first: {\r\n                      _id: this.teamsAll[0].players.first._id,\r\n                      name: `${this.teamsAll[0].players.first.surname || '(brak)'}, ${this.teamsAll[0].players.first.name || '(brak)'}`\r\n                    },\r\n                    second: {\r\n                      _id: this.teamsAll[0].players.second._id,\r\n                      name: `${this.teamsAll[0].players.second.surname || '(brak)'}, ${this.teamsAll[0].players.second.name || '(brak)'}`\r\n                    }\r\n                  },\r\n                  statistics: {\r\n                    matches: {\r\n                      won: this.teamsAll[0].statistics.matches.won,\r\n                      lost: this.teamsAll[0].statistics.matches.lost\r\n                    },\r\n                    goals: {\r\n                      for: this.teamsAll[0].statistics.goals.for,\r\n                      against: this.teamsAll[0].statistics.goals.against\r\n                    }\r\n                  },\r\n                  leagues: this.teamsAll[0].leagues\r\n                }\r\n              }\r\n            }\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    catch (e) { console.log('_gt: Coś nie tak', e); };\r\n  }\r\n\r\n  // Najlepiej nie używać - zajrzyj do frontend\\src\\components\\Register.js; stamtąd można zaimportować.\r\n  _getDivisions() {\r\n//   async _getDivisions() {\r\n//     let divisions = await axios({\r\n//       url: `/api/division`,\r\n//       method: 'get',\r\n//       data: {},\r\n//       headers: {\r\n//         'x-auth-token': localStorage.token,\r\n//       }\r\n//     });\r\n// console.log('_getDivisions:', divisions);\r\n    return [\r\n      // powinno się ciągnąć z bazy, ale nie znalazłem endpointa na razie...\r\n      { key: 'WRO', value: 'WRO', text: 'Wrocław' },\r\n      { key: 'KRK', value: 'KRK', text: 'Kraków' },\r\n      { key: 'WAW', value: 'WAW', text: 'Warszawa' },\r\n    ];\r\n  }\r\n\r\n  _updateUserTeams = async (userId, teamId) => {\r\n    let user = await axios({\r\n      url: `/api/user/${userId}`,\r\n      method: 'get',\r\n      data: {},\r\n      headers: {\r\n        'x-auth-token': localStorage.token,\r\n      }\r\n    });\r\n    const teams = [...user.data.teams];\r\n    if (user.data.teams.indexOf(teamId) < 0) { teams.push(teamId); \r\n      user.data.teams = [...teams];\r\n      user = await axios({\r\n        url: `/api/user/${userId}`,\r\n        method: 'put',\r\n        data: { teams: teams},\r\n        headers: {\r\n          'x-auth-token': localStorage.token,\r\n        }\r\n      });\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport default Teams;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Teams from './Teams';\r\nimport { Form, Segment, Label, Input, Message } from 'semantic-ui-react';\r\nimport Store from '../../Store';\r\n\r\nclass TeamCreate extends Teams {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isMe: false,\r\n      term: '',\r\n      newTeam: '',\r\n      player1: '',\r\n      player2: '',\r\n      errHeader: '',\r\n      errMessage: '',\r\n      warnHeader: '',\r\n      warnMessage: '',\r\n      infoHeader: '',\r\n      infoMessage: '',\r\n      postSuccess: false\r\n    };\r\n\r\n    this.teams = [];\r\n    this._gt('forSelect');\r\n\r\n    this.users = [];\r\n  }\r\n\r\n  static contextType = Store;\r\n\r\n  componentDidMount() {\r\n    this.setState( () => { return { isMe: !!this.context.me }; } );\r\n    this.getUsers();\r\n  }\r\n\r\n  onInputChange = e => {\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        errHeader: '',\r\n        errMessage: '',\r\n        newTeam: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  onSelectChange = (e, { value, name }) => {\r\n    switch (name) {\r\n      case 'player1':\r\n        this.setState(() => {\r\n          return {\r\n            player1: value,\r\n            errHeader: '',\r\n            errMessage: '',\r\n          };\r\n        });\r\n        break;\r\n      case 'player2':\r\n        this.setState(() => {\r\n          return {\r\n            player2: value,\r\n            errHeader: '',\r\n            errMessage: '',\r\n          };\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  onFormSubmit = (e, d) => {\r\n    e.preventDefault();\r\n    if (d.name !== 'btnCancel') {\r\n      if (this._validateForm()) {\r\n        this._postTeam();\r\n      }\r\n    }\r\n  };\r\n\r\n  onClickCancel = (e, d) => {\r\n    this.setState( () => { return {\r\n      term: '',\r\n      newTeam: '',\r\n      player1: '',\r\n      player2: '',\r\n      errHeader: '',\r\n      errMessage: '',\r\n      warnHeader: '',\r\n      warnMessage: '',\r\n      infoHeader: '',\r\n      infoMessage: '',\r\n      postSuccess: false\r\n    } } )\r\n  };\r\n\r\n  onClickDalej = (e, d) => {\r\n    this.setState( () => { return {\r\n      term: '',\r\n      newTeam: '',\r\n      player1: '',\r\n      player2: '',\r\n      errHeader: '',\r\n      errMessage: '',\r\n      warnHeader: '',\r\n      warnMessage: '',\r\n      infoHeader: '',\r\n      infoMessage: '',\r\n      postSuccess: false\r\n    } } )\r\n  }\r\n\r\n  _validateForm = () => {\r\n    let teamOK = true;\r\n    let playersOK = true;\r\n    const team = this.state.newTeam;\r\n    if (team) {\r\n      if (\r\n        this.teams.filter(el => {\r\n          return el.text === team;\r\n        }).length\r\n      ) {\r\n        this.setState(() => {\r\n          return {\r\n            errHeader: 'BŁĄD!',\r\n            errMessage: 'Drużyna o tej nazwie już istnieje',\r\n          };\r\n        });\r\n        teamOK = false;\r\n      } else {\r\n        this.setState(() => {\r\n          return {\r\n            errHeader: '',\r\n            errMessage: '',\r\n          };\r\n        });\r\n      }\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          errHeader: 'BŁĄD!',\r\n          errMessage: 'Drużyna musi mieć nazwę',\r\n        };\r\n      });\r\n      teamOK = false;\r\n    }\r\n\r\n    if (!teamOK) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.state.player1 || !this.state.player2) {\r\n      this.setState(() => {\r\n        return {\r\n          errHeader: 'BŁĄD!',\r\n          errMessage: 'Musisz wskazać obydwu graczy',\r\n        };\r\n      });\r\n      playersOK = false;\r\n    }\r\n    if (this.state.player1 && this.state.player2 && this.state.player1 === this.state.player2) {\r\n      this.setState(() => {\r\n        return {\r\n          warnHeader: 'UWAGA!',\r\n          warnMessage: 'Właśnie utworzyłeś drużynę jednoosobową',\r\n        };\r\n      });\r\n      playersOK = true;\r\n    }\r\n    return playersOK;\r\n  };\r\n\r\n  async _postTeam() {\r\n    // eslint-disable-next-line\r\n    const teams = await axios({\r\n      url: '/api/teams/',\r\n      method: 'post',\r\n      data: {\r\n        name: this.state.newTeam,\r\n        players: {\r\n          first: this.users.filter(el => {\r\n            return el.value === this.state.player1;\r\n          })[0].key,\r\n          second: this.users.filter(el => {\r\n            return el.value === this.state.player2;\r\n          })[0].key,\r\n        },\r\n        status: 'active',\r\n      },\r\n      headers: {\r\n        'x-auth-token': localStorage.token,\r\n      },\r\n    }).then(\r\n      res => {\r\n        // Modyfikuje tablice 'teams' dla playerów - członków drużyny\r\n        this._updateUserTeams(res.data.players.first, res.data._id);\r\n        this._updateUserTeams(res.data.players.second, res.data._id);\r\n        this.setState(() => {\r\n          return {\r\n            postSuccess: true,\r\n            newTeam: '',\r\n            player2: '',\r\n            infoHeader: 'BRAWO!',\r\n            infoMessage: 'Drużyna została zapisana'\r\n          };\r\n        });\r\n      },\r\n      err => {\r\n        console.log('_postTeam', err.errmsg);\r\n      },\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // if (this.state.postSuccess) return <Redirect to=\"/\" />;\r\n    return (\r\n      <>\r\n        <Segment.Group horizontal>\r\n          <Segment>\r\n            {/* <Form onSubmit={this, this.onFormSubmit}> */}\r\n            <Form onSubmit={this.onFormSubmit}>\r\n              <Form.Group>\r\n                <Form.Field>\r\n                  <Label>Nazwa drużyny</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"wprowadź nazwę drużyny...\"\r\n                    value={this.state.newTeam}\r\n                    onChange={e => {\r\n                      this.onInputChange(e);\r\n                    }}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Field>\r\n                  <Label>Wybierz graczy</Label>\r\n                  <Form.Group inline>\r\n                    {(this.context.me.role === 'admin') && (\r\n                      <Form.Dropdown\r\n                        key=\"player1\"\r\n                        name=\"player1\"\r\n                        placeholder=\"wskaż gracza 1...\"\r\n                        selection\r\n                        value={this.state.player1}\r\n                        options={this.users}\r\n                        onChange={(e, v) => this.onSelectChange(e, v)}\r\n                      />\r\n                    )}\r\n                    {(this.context.me.role === 'player') && (\r\n                      <Form.Dropdown\r\n                        key=\"player1\"\r\n                        name=\"player1\"\r\n                        placeholder=\"wskaż gracza 1...\"\r\n                        selection\r\n                        value={this.state.player1}\r\n                        options={this.users.filter( (el) => { return el.text === `${this.context.me._id}: ${this.context.me.surname}, ${this.context.me.name}`; })}\r\n                        onChange={(e, v) => this.onSelectChange(e, v)}\r\n                      />\r\n                    )}\r\n                    <Form.Dropdown\r\n                      key=\"player2\"\r\n                      name=\"player2\"\r\n                      placeholder=\"wskaż gracza 2...\"\r\n                      selection\r\n                      value={this.state.player2}\r\n                      options={this.users}\r\n                      onChange={(e, v) => this.onSelectChange(e, v)}\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Form>\r\n            {this.state.errHeader + this.state.errMessage !== '' && (\r\n              <Form error>\r\n                <Message error header={this.state.errHeader} content={this.state.errMessage} />\r\n              </Form>\r\n            )}\r\n            {this.state.warnHeader + this.state.warnMessage !== '' && (\r\n              <Form warning>\r\n                <Message\r\n                  warning\r\n                  header={this.state.warnHeader}\r\n                  content={this.state.warnMessage}\r\n                />\r\n              </Form>\r\n            )}\r\n            {this.state.infoHeader + this.state.infoMessage !== '' && (\r\n              <Form success>\r\n                <Message\r\n                  success\r\n                  header={this.state.infoHeader}\r\n                  content={this.state.infoMessage}\r\n                />\r\n                <Form.Button name=\"btnDalej\" onClick={this.onClickDalej}>Dalej</Form.Button>\r\n              </Form>\r\n            )}\r\n          </Segment>\r\n        </Segment.Group>\r\n        {this.state.warnHeader + this.state.warnMessage + this.state.infoHeader + this.state.infoMessage === '' && (\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Button name=\"btnSave\" onClick={this.onFormSubmit}>Zapisz</Form.Button>\r\n              <Form.Button name=\"btnCancel\" onClick={this.onClickCancel}>Anuluj</Form.Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default TeamCreate;\r\n","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nclass LeaguesTable extends React.Component {\r\n  state = {\r\n    leagues: [],\r\n  };\r\n\r\n  refresh = () => {\r\n    this.props.query().then(leagues => this.setState({ leagues }));\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.refresh();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Table celled textAlign=\"center\">\r\n        <Table.Header>\r\n          <Table.Row>\r\n            {this.props.headers.map(x => (\r\n              <Table.HeaderCell key={x.name} width={x.width}>\r\n                {x.name}\r\n              </Table.HeaderCell>\r\n            ))}\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {this.state.leagues.map(x => (\r\n            <this.props.row key={x._id} data={x} refresh={this.refresh} />\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaguesTable;\r\n","import * as moment from 'moment';\r\n\r\nconst formatDate = x => (x ? moment(x).format('DD.MM.YYYY') : 'Brak');\r\n\r\nexport { formatDate };\r\n","import React from 'react';\r\nimport { Modal, Button } from 'semantic-ui-react';\r\nconst AskModal = props => {\r\n  const onPositive = () => {\r\n    (props.onPositive || (() => {}))();\r\n    props.onClose();\r\n  };\r\n\r\n  const onNegative = () => {\r\n    (props.onNegative || (() => {}))();\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal open={props.open} onClose={props.onClose} closeOnDimmerClick={false} size=\"small\">\r\n      <Modal.Header>{props.header}</Modal.Header>\r\n      {props.children ? <Modal.Content>{props.children}</Modal.Content> : ''}\r\n      <Modal.Actions>\r\n        <Button onClick={onPositive} positive labelPosition=\"right\" icon=\"checkmark\" content={props.positive} />\r\n        <Button onClick={onNegative} negative labelPosition=\"right\" icon=\"close\" content={props.negative} />\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AskModal;\r\n","import React from 'react';\r\nimport { Grid, Segment, Item, Icon } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\n\r\nconst TeamViewGridItem = props => {\r\n  const { team, onClick } = props;\r\n\r\n  const unpackMatches = team => {\r\n    const matches = team.statistics.matches;\r\n    return `${matches.won + matches.lost}/${matches.won}/${matches.lost}`;\r\n  };\r\n\r\n  const unpackGoals = team => {\r\n    const goals = team.statistics.goals;\r\n    return `${goals.for}/${goals.against}/${goals.for - goals.against}`;\r\n  };\r\n\r\n  return team.isPlayerInLeague ? (\r\n    <Item className=\"team-view-grid-item--inactive\">\r\n      <Segment>\r\n        <Icon name=\"users\" size=\"large\" />\r\n        <Item.Content>\r\n          <Item.Header>{team.name}</Item.Header>\r\n          <Item.Description>\r\n            Gracz: {team.player} <br />\r\n            Wynik: {unpackMatches(team)}/{unpackGoals(team)}\r\n          </Item.Description>\r\n        </Item.Content>\r\n      </Segment>\r\n    </Item>\r\n  ) : (\r\n    <Item as=\"a\" onClick={onClick} className=\"team-view-grid-item\">\r\n      <Segment>\r\n        <Icon name=\"users\" size=\"large\" />\r\n        <Item.Content>\r\n          <Item.Header>{team.name}</Item.Header>\r\n          <Item.Description>\r\n            Gracz: {team.player} <br />\r\n            Wyniki: {unpackMatches(team)}/{unpackGoals(team)}\r\n          </Item.Description>\r\n        </Item.Content>\r\n      </Segment>\r\n    </Item>\r\n  );\r\n};\r\n\r\nconst TeamViewGridRow = props => {\r\n  return (\r\n    <Grid.Row>\r\n      {props.teams.map(x => (\r\n        <Grid.Column key={`c_${x.name}`}>\r\n          <TeamViewGridItem team={x} onClick={props.onClickFactory(x)} />\r\n        </Grid.Column>\r\n      ))}\r\n    </Grid.Row>\r\n  );\r\n};\r\n\r\nconst TeamViewGrid = props => {\r\n  return (\r\n    <Grid columns={props.columns} textAlign=\"center\">\r\n      {_.chunk(props.teams, props.columns).map((x, i) => (\r\n        <TeamViewGridRow key={`r_${i}`} teams={x} onClickFactory={props.onClickFactory} />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TeamViewGrid;\r\n","import React from 'react';\r\nimport TeamViewGrid from './TeamViewGrid';\r\nimport _ from 'lodash';\r\nimport { Search, Grid } from 'semantic-ui-react';\r\n\r\nconst initialState = { isLoading: false, results: [], value: '' };\r\nclass TeamViewGridWithSearch extends React.Component {\r\n  state = initialState;\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value });\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState);\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\r\n      const isMatch = result => re.test(result.name) || re.test(result.player);\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(this.props.teams, isMatch),\r\n      });\r\n    }, 300);\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, value, results } = this.state;\r\n    const teamViewGridProps = { ...this.props, teams: value ? results : this.props.teams };\r\n    return (\r\n      <Grid centered>\r\n        <Grid.Row>\r\n          <Search\r\n            loading={isLoading}\r\n            onSearchChange={_.debounce(this.handleSearchChange, 300, {\r\n              leading: true,\r\n            })}\r\n            results={results}\r\n            value={value}\r\n            open={false}\r\n            input={{ placeholder: 'Wyszukaj po nazwie drużyny lub gracza' }}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <TeamViewGrid {...teamViewGridProps} />\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamViewGridWithSearch;\r\n","import React from 'react';\r\nimport { Table, Icon, Label, Modal } from 'semantic-ui-react';\r\nimport { formatDate } from '../../utils/date';\r\nimport AskModal from '../Modals/AskModal';\r\nimport setHeaders from '../../utils/setHeaders';\r\nimport TeamViewGridWithSearch from '../Teams/TeamViewGridWithSearch';\r\nimport axios from 'axios';\r\n\r\nconst prepareTeams = (name, teams, league) => {\r\n  const unpackPlayer = team => {\r\n    return team.players.first === name ? team.players.second : team.players.first;\r\n  };\r\n  // console.log(league);\r\n  const isPlayerInLeague = player => {\r\n    for (let { team } of league.teams) {\r\n      if (player === team.players.first || player === team.players.second) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  for (let team of teams) {\r\n    team.player = unpackPlayer(team);\r\n    team.isPlayerInLeague = isPlayerInLeague(team.player);\r\n  }\r\n  return [...teams.filter(x => !x.isPlayerInLeague), ...teams.filter(x => x.isPlayerInLeague)];\r\n};\r\n\r\nclass TeamViewModal extends React.Component {\r\n  state = {\r\n    askModalProps: {\r\n      open: false,\r\n    },\r\n  };\r\n\r\n  openModalFactory = team => () => {\r\n    this.setState({\r\n      askModalProps: {\r\n        header: `Czy chcesz się zapisać zespołem ${team.name} do ligi ${this.props.league.name}?`,\r\n        positive: 'Tak',\r\n        negative: 'Nie',\r\n        open: true,\r\n        onClose: this.closeModal,\r\n        onPositive: () => {\r\n          axios({\r\n            url: `/api/leagues/${this.props.league.name}/team`,\r\n            method: 'POST',\r\n            ...setHeaders(),\r\n            data: { id: team._id },\r\n          })\r\n            .then(() => {\r\n              this.props.refresh();\r\n            })\r\n            .finally(() => {\r\n              this.props.onClose();\r\n            });\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ askModalProps: { open: false } });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal open={this.props.open} onClose={this.props.onClose} closeOnDimmerClick={false} closeIcon>\r\n        <Modal.Header>Wybierz drużynę</Modal.Header>\r\n        <Modal.Content scrolling>\r\n          <TeamViewGridWithSearch columns={3} teams={this.props.teams} onClickFactory={this.openModalFactory} />\r\n        </Modal.Content>\r\n        <AskModal {...this.state.askModalProps} />;\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass LeaguesTableRowOpen extends React.Component {\r\n  state = {\r\n    isModalOpen: false,\r\n    teams: [],\r\n  };\r\n\r\n  openModal = () => {\r\n    const name = localStorage.getItem('id');\r\n    axios\r\n      .get(`/api/users/${name}/teams`, setHeaders())\r\n      .then(resp => resp.data)\r\n      .then(teams => this.setState({ teams: prepareTeams(name, teams, this.props.data), isModalOpen: true }));\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ isModalOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const { data, refresh } = this.props;\r\n    const dateCreated = formatDate(data.date.created);\r\n    return (\r\n      <Table.Row>\r\n        <Table.Cell>{data.name}</Table.Cell>\r\n        <Table.Cell>{data.description}</Table.Cell>\r\n        <Table.Cell>{data.owner}</Table.Cell>\r\n        <Table.Cell>{dateCreated}</Table.Cell>\r\n        <Table.Cell>{data.teams.length}</Table.Cell>\r\n        <Table.Cell textAlign=\"left\">\r\n          {data.isUserInLeague ? (\r\n            <Label color=\"green\" ribbon=\"right\">\r\n              <Icon name=\"thumbs up\" size=\"large\" />\r\n              {data.userTeamInLeague}\r\n            </Label>\r\n          ) : (\r\n            <Label as=\"a\" color=\"blue\" ribbon=\"right\" onClick={this.openModal}>\r\n              <Icon name=\"hand pointer\" size=\"large\" />\r\n              Dołącz\r\n            </Label>\r\n          )}\r\n        </Table.Cell>\r\n        <TeamViewModal\r\n          open={this.state.isModalOpen}\r\n          onClose={this.closeModal}\r\n          league={data}\r\n          teams={this.state.teams}\r\n          refresh={refresh}\r\n        />\r\n      </Table.Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaguesTableRowOpen;\r\n","import React from 'react';\r\nimport { Table, Icon, Label } from 'semantic-ui-react';\r\nimport { formatDate } from '../../utils/date';\r\n\r\nclass LeaguesTableRowPending extends React.Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    const dateCreated = formatDate(data.date.created);\r\n    const dateStarted = formatDate(data.date.started);\r\n    return (\r\n      <Table.Row>\r\n        <Table.Cell>{data.name}</Table.Cell>\r\n        <Table.Cell>{data.description}</Table.Cell>\r\n        <Table.Cell>{data.owner}</Table.Cell>\r\n        <Table.Cell>{dateCreated}</Table.Cell>\r\n        <Table.Cell>{dateStarted}</Table.Cell>\r\n        <Table.Cell>{data.teams.length}</Table.Cell>\r\n        <Table.Cell textAlign=\"left\">\r\n          <Label as=\"a\" color=\"blue\" ribbon=\"right\">\r\n            <Icon name=\"hand pointer\" size=\"large\" />\r\n            Terminarz\r\n          </Label>\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaguesTableRowPending;\r\n","import React from 'react';\r\nimport { Table, Icon, Label } from 'semantic-ui-react';\r\nimport { formatDate } from '../../utils/date';\r\n\r\nclass LeaguesTableRowClosed extends React.Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    const dateCreated = formatDate(data.date.created);\r\n    const dateStarted = formatDate(data.date.started);\r\n    const dateClosed = formatDate(data.date.closed);\r\n    return (\r\n      <Table.Row>\r\n        <Table.Cell>{data.name}</Table.Cell>\r\n        <Table.Cell>{data.description}</Table.Cell>\r\n        <Table.Cell>{data.owner}</Table.Cell>\r\n        <Table.Cell>{dateCreated}</Table.Cell>\r\n        <Table.Cell>{dateStarted}</Table.Cell>\r\n        <Table.Cell>{dateClosed}</Table.Cell>\r\n        <Table.Cell textAlign=\"left\">\r\n          <Label as=\"a\" color=\"blue\" ribbon=\"right\">\r\n            <Icon name=\"hand pointer\" size=\"large\" />\r\n            Akcja\r\n          </Label>\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaguesTableRowClosed;\r\n","import React from 'react';\r\nimport { Table, Icon, Label } from 'semantic-ui-react';\r\nimport { formatDate } from '../../utils/date';\r\nimport axios from 'axios';\r\nimport AskModal from '../Modals/AskModal';\r\nimport setHeaders from '../../utils/setHeaders';\r\n\r\nclass LeaguesTableRowOwner extends React.Component {\r\n  state = {\r\n    askModalProps: {\r\n      open: false,\r\n    },\r\n  };\r\n\r\n  openModalStartLeague = () => {\r\n    const leagueName = this.props.data.name;\r\n    this.setState({\r\n      askModalProps: {\r\n        header: `Czy napewno chcesz wystartować ligę ${leagueName}?`,\r\n        positive: 'Tak',\r\n        negative: 'Nie',\r\n        open: true,\r\n        onClose: this.closeModal,\r\n        onPositive: () => {\r\n          axios({\r\n            url: `/api/leagues/${leagueName}/start`,\r\n            method: 'PUT',\r\n            ...setHeaders(),\r\n          }).then(() => {\r\n            this.props.refresh();\r\n          });\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  openModalScheduleLeague = () => {\r\n    this.setState({\r\n      askModalProps: {\r\n        header: `Rozlosować kolejne mecze dla ligi ${this.props.data.name}?`,\r\n        positive: 'Tak',\r\n        negative: 'Nie',\r\n        open: true,\r\n        onClose: this.closeModal,\r\n        onPositive: () => {\r\n          console.log('Positive');\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  openModalCloseLeague = () => {\r\n    this.setState({\r\n      askModalProps: {\r\n        header: `Czy napewno chcesz zamknąć ligę ${this.props.data.name}`,\r\n        positive: 'Tak',\r\n        negative: 'Nie',\r\n        open: true,\r\n        onClose: this.closeModal,\r\n        onPositive: () => {\r\n          console.log('Positive');\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ askModalProps: { open: false } });\r\n  };\r\n\r\n  selectLabels = status => {\r\n    if (status === 'created') {\r\n      return (\r\n        <Label as=\"a\" color=\"blue\" ribbon=\"right\" onClick={this.openModalStartLeague}>\r\n          <Icon name=\"hand pointer\" size=\"large\" />\r\n          Rozpocznij ligę\r\n        </Label>\r\n      );\r\n    } else if (status === 'pending') {\r\n      return (\r\n        <div>\r\n          <Label as=\"a\" color=\"blue\" ribbon=\"right\" onClick={this.openModalScheduleLeague}>\r\n            <Icon name=\"hand pointer\" size=\"large\" />\r\n            Rozlosuj mecze\r\n          </Label>\r\n          <Label as=\"a\" color=\"red\" ribbon=\"right\" onClick={this.openModalCloseLeague}>\r\n            <Icon name=\"hand pointer\" size=\"large\" />\r\n            Zakończ ligę\r\n          </Label>\r\n        </div>\r\n      );\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    const dateCreated = formatDate(data.date.created);\r\n    const dateStarted = formatDate(data.date.started);\r\n    const dateClosed = formatDate(data.date.closed);\r\n    const labels = this.selectLabels(data.status);\r\n    return (\r\n      <Table.Row>\r\n        <Table.Cell>{data.name}</Table.Cell>\r\n        <Table.Cell>{data.description}</Table.Cell>\r\n        <Table.Cell>{dateCreated}</Table.Cell>\r\n        <Table.Cell>{dateStarted}</Table.Cell>\r\n        <Table.Cell>{dateClosed}</Table.Cell>\r\n        <Table.Cell>{data.status}</Table.Cell>\r\n        <Table.Cell>{data.teams.length}</Table.Cell>\r\n        <Table.Cell textAlign=\"left\">{labels}</Table.Cell>\r\n        <AskModal {...this.state.askModalProps} />;\r\n      </Table.Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaguesTableRowOwner;\r\n","import React from 'react';\r\nimport Teams from './Teams';\r\n// import { Message, Table } from 'semantic-ui-react';\r\n\r\n// import setHeaders from '../../utils/setHeaders';\r\n// import Leagues from '../../Views/Leagues';\r\nimport {\r\n  LeaguesTable,\r\n  LeaguesTableRowClosed,\r\n} from '../../components/Leagues';\r\n\r\nimport Store from '../../Store';\r\n\r\nclass LeaguesTableInTeamView extends LeaguesTable {\r\n\r\n  fetchLeagues = () => {\r\n    // return this.props.query().then(resp => resp.json());\r\n    // console.log( 'query->', this.props.query() );\r\n    return this.props.query();\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    // this.fetchLeagues().then(leagues => this.setState({ leagues }));\r\n    this.setState( () => { return { leagues: this.fetchLeagues() }; } )\r\n    // console.log('LeaguesTableInTeamView->', this.props);\r\n  };\r\n\r\n}\r\n\r\nconst LeaguesTableClosed = (leagues) => {\r\n  const config = {\r\n    headers: [\r\n      { width: 3, name: 'Nazwa' },\r\n      { width: 3, name: 'Opis' },\r\n      { width: 2, name: 'Twórca' },\r\n      { width: 2, name: 'Data utworzenia' },\r\n      { width: 2, name: 'Data rozpoczęcia' },\r\n      { width: 2, name: 'Data zakończenia' },\r\n      { width: 2, name: 'Wyniki' },\r\n    ],\r\n    // query: () => fetch('/api/leagues/?status=closed', setHeaders()),\r\n    query: () => { return leagues; },\r\n    row: LeaguesTableRowClosed,\r\n  };\r\n  // return <LeaguesTable {...config} />;\r\n  return <LeaguesTableInTeamView {...config} />;\r\n};\r\n\r\n\r\nclass ComponentTeamViewLeagues extends Teams {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  static contextType = Store;\r\n\r\n  render() {\r\n    // console.log('ComponentTeamViewLeagues.render()->', this.props.leagues);\r\n    // return(\r\n    // //   <Message info>\r\n    // //   <p>Są jakieś ligi</p>\r\n    // // </Message>\r\n    //   <></>\r\n    // )\r\n    return LeaguesTableClosed(this.props.leagues);\r\n  };\r\n\r\n}\r\n\r\nexport default ComponentTeamViewLeagues;\r\n","import React from 'react';\r\nimport Teams from './Teams';\r\nimport ComponentTeamViewLeagues from './TeamViewLeagues';\r\nimport AskModal from '../Modals/AskModal';\r\nimport { Form, Segment, Label, Input, Table, Divider, Header, Icon, Message, Dropdown } from 'semantic-ui-react';\r\nimport Store from '../../Store';\r\n\r\nclass TeamView extends Teams {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isMe: false,\r\n      editable: false,\r\n      term: '',\r\n      team: '',\r\n      teamId: 0,\r\n      players: {\r\n        first: {\r\n          _id: '',\r\n          name: '',\r\n        },\r\n        second: {\r\n          _id: '',\r\n          name: '',\r\n        },\r\n      },\r\n      statistics: {\r\n        matches: {\r\n          won: 0,\r\n          lost: 0,\r\n        },\r\n        goals: {\r\n          for: 0,\r\n          against: 0,\r\n        },\r\n      },\r\n      leagues: [],\r\n    };\r\n\r\n    this.teams = [];\r\n    this.teamsAll = [];\r\n\r\n    this._gt('forSelect'); // wypełnia tablicę this.teams\r\n    this._gt('all'); // wypełnia tablicę this.teamsAll\r\n  }\r\n\r\n  static contextType = Store;\r\n\r\n  componentDidMount() {\r\n    this.setState(() => {\r\n      return { isMe: !!this.context.me };\r\n    });\r\n    // console.log('TeamsView->', this.context.me);\r\n  }\r\n\r\n  openModalFactory = () => {\r\n    this.setState(() => {\r\n      return {\r\n        askModalProps: {\r\n          header: `Czy usunąć zespół \"${this.state.team}\"?`,\r\n          positive: 'Tak',\r\n          negative: 'Nie',\r\n          open: true,\r\n          onClose: this.closeModal,\r\n          // onPositive: () => {\r\n          //   axios({\r\n          //     url: `/api/leagues/${this.props.league.name}/team`,\r\n          //     method: 'POST',\r\n          //     ...setHeaders(),\r\n          //     data: { id: team._id },\r\n          //   })\r\n          //     .then(() => {\r\n          //       this.props.refresh();\r\n          //     })\r\n          //     .finally(() => {\r\n          //       this.props.onClose();\r\n          //     });\r\n          // },\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ askModalProps: { open: false } });\r\n  };\r\n\r\n  onSelectChange = (e, { value, name }) => {\r\n    const index = this.teams\r\n      .map(el => {\r\n        return el.value;\r\n      })\r\n      .indexOf(value);\r\n    const id = this.teams[index].key;\r\n    const teamsAllIndex = this.teamsAll\r\n      .map(el => {\r\n        return el._id;\r\n      })\r\n      .indexOf(id);\r\n    const players = this.teamsAll[teamsAllIndex].players;\r\n    const stats = this.teamsAll[teamsAllIndex].statistics;\r\n    const leagues = this.teamsAll[teamsAllIndex].leagues;\r\n    this.setState(() => {\r\n      return {\r\n        team: value,\r\n        errHeader: '',\r\n        errMessage: '',\r\n        teamId: id,\r\n        players: {\r\n          first: {\r\n            _id: players.first._id,\r\n            name: `${players.first.surname || '(brak)'}, ${players.first.name || '(brak)'}`,\r\n          },\r\n          second: {\r\n            _id: players.second._id,\r\n            name: `${players.second.surname || '(brak)'}, ${players.second.name || '(brak)'}`,\r\n          },\r\n        },\r\n        statistics: {\r\n          matches: {\r\n            won: stats.matches.won || 0,\r\n            lost: stats.matches.lost || 0,\r\n          },\r\n          goals: {\r\n            for: stats.goals.for || 0,\r\n            against: stats.goals.against || 0,\r\n          },\r\n        },\r\n        leagues: leagues,\r\n      };\r\n    });\r\n  };\r\n\r\n  onClickEdit = (e, d) => {\r\n    this.setState(() => {\r\n      return { editable: !this.state.editable };\r\n    });\r\n  };\r\n\r\n  onClickCancel = (e, d) => {\r\n    if (this.state.editable) {\r\n      this.setState(() => {\r\n        return { editable: false };\r\n      });\r\n    }\r\n  };\r\n\r\n  onFormSubmit = (e, d) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  onClickVerify = async (e, d) => {\r\n    // sprawdza i ew. uzupełnia listy 'teams', w których występuje 'user'\r\n    // dodatkowy button w komponencie - zakomentowany\r\n    await this._updateUserTeams(this.state.players.first._id, this.state.teamId);\r\n    await this._updateUserTeams(this.state.players.second._id, this.state.teamId);\r\n  };\r\n\r\n  onClickDelete = () => {\r\n    this.openModalFactory();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isMe && (\r\n          <>\r\n            <Segment.Group width={12}>\r\n              <Segment>\r\n                {this.context.me.role === 'player' && <Label>Twoje drużyny:</Label>}\r\n                {this.context.me.role === 'admin' && <Label>Zgłoszone drużyny:</Label>}\r\n                <Dropdown\r\n                  key=\"teamsSelect\"\r\n                  name=\"teamsSelect\"\r\n                  placeholder=\"Wybierz z listy...\"\r\n                  selection\r\n                  value={this.state.team}\r\n                  options={this.teams}\r\n                  onChange={(e, v) => this.onSelectChange(e, v)}\r\n                />\r\n              </Segment>\r\n              <Segment>\r\n                <Form.Group>\r\n                  <Divider horizontal>\r\n                    <Header as=\"h4\">\r\n                      <Icon name=\"group\" />\r\n                      Gracze\r\n                    </Header>\r\n                  </Divider>\r\n                  <Input label=\"Gracz 1:\" value={this.state.players.first.name} readOnly={true} />\r\n                  <Input label=\"Gracz 2:\" value={this.state.players.second.name} readOnly={true} />\r\n                </Form.Group>\r\n                <br />\r\n                <Divider horizontal>\r\n                  <Header as=\"h4\">\r\n                    <Icon name=\"columns\" />\r\n                    Ligi\r\n                  </Header>\r\n                </Divider>\r\n                {this.state.leagues.length === 0 && (\r\n                  <Message info>\r\n                    <p>Wygląda na to, że drużyny nie przypisano do żadnej ligi</p>\r\n                  </Message>\r\n                )}\r\n                {this.state.leagues.length !== 0 && <ComponentTeamViewLeagues leagues={this.state.leagues} />}\r\n                <br />\r\n                <Divider horizontal>\r\n                  <Header as=\"h4\">\r\n                    <Icon name=\"bar chart\" />\r\n                    Statystyka\r\n                  </Header>\r\n                </Divider>\r\n                <Table celled textAlign={'center'}>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell colSpan={2}>Mecze</Table.HeaderCell>\r\n                      <Table.HeaderCell colSpan={2}>Bramki</Table.HeaderCell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Wygrane</Table.HeaderCell>\r\n                      <Table.HeaderCell>Przegrane</Table.HeaderCell>\r\n                      <Table.HeaderCell>Zdobyte</Table.HeaderCell>\r\n                      <Table.HeaderCell>Stracone</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    <Table.Row>\r\n                      <Table.Cell>{this.state.statistics.matches.won}</Table.Cell>\r\n                      <Table.Cell>{this.state.statistics.matches.lost}</Table.Cell>\r\n                      <Table.Cell>{this.state.statistics.goals.for}</Table.Cell>\r\n                      <Table.Cell>{this.state.statistics.goals.against}</Table.Cell>\r\n                    </Table.Row>\r\n                  </Table.Body>\r\n                </Table>\r\n              </Segment>\r\n            </Segment.Group>\r\n            <Form>\r\n              {/* { this.state.editable && <Form.Button name='btnVerify' onClick={this.onClickVerify} floated='right'>Weryfikuj</Form.Button> } */}\r\n              <Form.Group>\r\n                {!this.state.editable && (\r\n                  <Form.Button name=\"btnEdit\" onClick={this.onClickEdit} floated=\"left\">\r\n                    Edytuj\r\n                  </Form.Button>\r\n                )}\r\n                {!this.state.editable && this.context.me.role === 'admin' && (\r\n                  <Form.Button name=\"btnDelete\" onClick={this.onClickDelete} floated=\"left\">\r\n                    Usuń\r\n                  </Form.Button>\r\n                )}\r\n                {this.state.editable && (\r\n                  <Form.Button name=\"btnSave\" onClick={this.onFormSubmit} floated=\"left\">\r\n                    Zapisz\r\n                  </Form.Button>\r\n                )}\r\n                {this.state.editable && (\r\n                  <Form.Button name=\"btnCancel\" onClick={this.onClickCancel}>\r\n                    Anuluj\r\n                  </Form.Button>\r\n                )}\r\n              </Form.Group>\r\n            </Form>\r\n          </>\r\n        )}\r\n        <AskModal {...this.state.askModalProps} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamView;\r\n","import React from 'react';\r\nimport { Grid, Menu, Header, Icon, Segment, Message } from 'semantic-ui-react';\r\nimport Teams from './Teams';\r\nimport TeamCreate from './TeamCreate';\r\nimport TeamView from './TeamView';\r\nimport Store from '../../Store';\r\n\r\nclass ComponentTeams extends Teams {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      term: '',\r\n      activeItem: 'przejrzyj',\r\n      isMe: false\r\n    };\r\n  }\r\n\r\n  static contextType = Store;\r\n\r\n  componentDidMount() {\r\n    // console.log('index->', this.context);\r\n    this.setState( () => { return { isMe: !!this.context.me }; } );\r\n  }\r\n\r\n  onInputChange = e => {\r\n    this.props.onChange(this.state.term);\r\n  };\r\n\r\n  onSelectChange = (e, { value, name }) => {\r\n    this.props.onChange(this.state.term);\r\n  };\r\n\r\n  onFormSubmit = () => {\r\n    this.props.onSubmit(this.state.term);\r\n  };\r\n\r\n  onClickCancel = () => {\r\n    this.props.onSubmit(this.state.term);\r\n  };\r\n\r\n  handleItemClick = (e, { name }) =>\r\n    this.setState(() => {\r\n      return { activeItem: name };\r\n    });\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n    return (\r\n      <div className=\"container\" style={{ textAlign: 'left' }}>\r\n        <Header as=\"h2\" textAlign=\"center\" style={{ paddingLeft: '40px' }}>\r\n          <Icon name=\"group\" />\r\n          <Header.Content>Zarządzanie drużynami</Header.Content>\r\n        </Header>\r\n\r\n        {!this.state.isMe && (\r\n          <Segment>Zrób coś, bo nie widać \"<i>context.me</i>\"</Segment>\r\n        )}\r\n\r\n        {this.state.isMe && (\r\n          <Message>\r\n            <p>\r\n              Jesteś zalogowany jako: <strong>{this.context.me._id}</strong>, \r\n              rola: <strong>{this.context.me.role}</strong>, \r\n              dywizja: <strong>{this.context.me.division}</strong>\r\n            </p> \r\n          </Message>\r\n        )}\r\n\r\n        <Segment>\r\n          <Grid>\r\n            <Grid.Column stretched width={2}>\r\n              <Menu fluid vertical tabular>\r\n                <Menu.Item name=\"przejrzyj\" active={activeItem === 'przejrzyj'} onClick={this.handleItemClick} />\r\n                <Menu.Item name=\"dodaj\" active={activeItem === 'dodaj'} onClick={this.handleItemClick} />\r\n              </Menu>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column stretched width={14}>\r\n              { (this.state.activeItem === 'dodaj') && <TeamCreate /> }\r\n              { (this.state.activeItem === 'przejrzyj') && <TeamView /> }\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Teams, ComponentTeams };\r\n","import React from 'react';\r\nimport { ComponentTeams } from '../../components/Teams';\r\n\r\nconst Teams = () => {\r\n  return <ComponentTeams />;\r\n};\r\n\r\nexport default Teams;\r\n","import React from 'react';\r\nimport { Route, NavLink, Redirect, Switch } from 'react-router-dom';\r\nimport PrivateRoute from '../PrivateRoute';\r\nimport { Grid, Menu } from 'semantic-ui-react';\r\n\r\nconst SubPageRouter = props => {\r\n  return (\r\n    <Switch>\r\n      {props.routing.map(x => (\r\n        <PrivateRoute key={x.path} path={x.path} component={x.component} />\r\n      ))}\r\n      <Route render={() => <Redirect to={props.routing[0].path || '/'} />} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nconst SubPageMenu = props => {\r\n  return (\r\n    <Menu fluid vertical tabular>\r\n      {props.routing.map(x => (\r\n        <Menu.Item key={x.path} as={NavLink} name={x.name} to={x.path} activeClassName=\"active\" />\r\n      ))}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst SubPage = props => {\r\n  return (\r\n    <div>\r\n      <Grid>\r\n        <Grid.Column width={3}>\r\n          <SubPageMenu routing={props.routing} />\r\n        </Grid.Column>\r\n        <Grid.Column stretched width={13}>\r\n          <SubPageRouter routing={props.routing} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubPage;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Form, Input, TextArea, Button } from 'semantic-ui-react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nclass NewLeague extends React.Component {\r\n  state = {\r\n    name: '',\r\n    description: '',\r\n    startDate: '',\r\n    postSuccessful: false,\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleDateChange = date => {\r\n    this.setState({\r\n      startDate: date,\r\n    });\r\n  };\r\n\r\n  onFormSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    await axios({\r\n      url: '/api/leagues',\r\n      method: 'post',\r\n      data: {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        date: { started: this.state.startDate },\r\n      },\r\n      headers: {\r\n        'x-auth-token': localStorage.getItem('token'),\r\n      },\r\n    })\r\n      .then(postLeague => {\r\n        alert(`Założone!!\r\n            ${postLeague.data.owner.name} - jesteś sędzią głównym w lidze: ${postLeague.data.name}`);\r\n        this.setState({ postSuccessful: true });\r\n      })\r\n      .catch(postLeague => {\r\n        alert(postLeague.response.data[0].message || postLeague.response.data);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.postSuccessful) return <Redirect to=\"/Leagues\" />;\r\n    return (\r\n      <div >\r\n        <Form onSubmit={this.onFormSubmit}>\r\n          <Form.Group >\r\n            <Form.Input\r\n              name=\"name\"\r\n              control={Input}\r\n              label=\"Nazwa\"\r\n              placeholder=\"Jak nazwiesz ligę?\"\r\n              onChange={this.handleInputChange}\r\n              width={12}\r\n            />\r\n            <Form.Input name=\"date\" label=\"Data startu\">\r\n              {\r\n                <DatePicker\r\n                  selected={this.state.startDate}\r\n                  onChange={this.handleDateChange}\r\n                  minDate={Date.now()}\r\n                  placeholderText=\"Kiedy zaczynacie?\"\r\n                />\r\n              }\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Input\r\n            name=\"description\"\r\n            control={TextArea}\r\n            maxLength=\"255\"\r\n            label=\"Opis (opcjonalny)\"\r\n            placeholder=\"Dodaj kilka słów, jeśli chcesz\"\r\n            onChange={this.handleInputChange}\r\n            // value={this.state.description}\r\n          />\r\n          <Button type=\"submit\" id=\"submit\" content=\"Załóż\" />\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewLeague;\r\n","import React from 'react';\r\nimport NewLeague from '../../components/NewLeague';\r\n\r\nconst CreateLeague = () => {\r\n  return <NewLeague />;\r\n};\r\n\r\nexport default CreateLeague;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport SubPage from '../../components/SubPage';\r\nimport setHeaders from '../../utils/setHeaders';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport {\r\n  LeaguesTable,\r\n  LeaguesTableRowOpen,\r\n  LeaguesTableRowPending,\r\n  LeaguesTableRowClosed,\r\n  LeaguesTableRowOwner,\r\n} from '../../components/Leagues';\r\nimport CreateLeague from '../NewLeague/index';\r\n\r\nconst queryLeaguesTableOpen = async () => {\r\n  const isUserInLeague = (league, user = localStorage.getItem('id')) => {\r\n    for (let { team } of league.teams) {\r\n      if (user === team.players.first || user === team.players.second) {\r\n        return [true, team.name];\r\n      }\r\n    }\r\n    return [false, ''];\r\n  };\r\n  const leagues = await axios.get('/api/leagues/?status=created&with=[\"team\"]', setHeaders()).then(resp => resp.data);\r\n  for (let league of leagues) {\r\n    const [inLeague, teamName] = isUserInLeague(league);\r\n    league['isUserInLeague'] = inLeague;\r\n    league['userTeamInLeague'] = teamName;\r\n  }\r\n  return leagues;\r\n};\r\n\r\nconst LeaguesTableOpen = () => {\r\n  const config = {\r\n    headers: [\r\n      { width: 3, name: 'Nazwa' },\r\n      { width: 4, name: 'Opis' },\r\n      { width: 3, name: 'Twórca' },\r\n      { width: 3, name: 'Data utworzenia' },\r\n      { width: 1, name: 'Zapisanych drużyn' },\r\n      { width: 2, name: 'Drużyna' },\r\n    ],\r\n    query: queryLeaguesTableOpen,\r\n    row: LeaguesTableRowOpen,\r\n  };\r\n  return <LeaguesTable {...config} />;\r\n};\r\n\r\nconst LeaguesTablePending = () => {\r\n  const config = {\r\n    headers: [\r\n      { width: 3, name: 'Nazwa' },\r\n      { width: 3, name: 'Opis' },\r\n      { width: 3, name: 'Twórca' },\r\n      { width: 2, name: 'Data utworzenia' },\r\n      { width: 2, name: 'Data rozpoczęcia' },\r\n      { width: 1, name: 'Zapisanych drużyn' },\r\n      { width: 2, name: 'Info' },\r\n    ],\r\n    query: () => axios.get('/api/leagues/?status=pending', setHeaders()).then(resp => resp.data),\r\n    row: LeaguesTableRowPending,\r\n  };\r\n  return <LeaguesTable {...config} />;\r\n};\r\n\r\nconst LeaguesTableClosed = () => {\r\n  const config = {\r\n    headers: [\r\n      { width: 3, name: 'Nazwa' },\r\n      { width: 3, name: 'Opis' },\r\n      { width: 2, name: 'Twórca' },\r\n      { width: 2, name: 'Data utworzenia' },\r\n      { width: 2, name: 'Data rozpoczęcia' },\r\n      { width: 2, name: 'Data zakończenia' },\r\n      { width: 2, name: 'Wyniki' },\r\n    ],\r\n    query: () => axios.get('/api/leagues/?status=closed', setHeaders()).then(resp => resp.data),\r\n    row: LeaguesTableRowClosed,\r\n  };\r\n  return <LeaguesTable {...config} />;\r\n};\r\n\r\nconst LeaguesTableOwner = () => {\r\n  const config = {\r\n    headers: [\r\n      { width: 2, name: 'Nazwa' },\r\n      { width: 2, name: 'Opis' },\r\n      { width: 2, name: 'Data utworzenia' },\r\n      { width: 2, name: 'Data rozpoczęcia' },\r\n      { width: 2, name: 'Data zakończenia' },\r\n      { width: 2, name: 'Status' },\r\n      { width: 2, name: 'Drużyny' },\r\n      { width: 2, name: 'Akcje' },\r\n    ],\r\n    query: () => axios.get('/api/leagues/?status=owner', setHeaders()).then(resp => resp.data),\r\n    row: LeaguesTableRowOwner,\r\n  };\r\n  return <LeaguesTable {...config} />;\r\n};\r\n\r\nconst Leagues = props => {\r\n  const path = props.match.path;\r\n  const routing = [\r\n    { name: 'Otwarte', path: `${path}/Open`, component: LeaguesTableOpen },\r\n    { name: 'Trwające', path: `${path}/Pending`, component: LeaguesTablePending },\r\n    { name: 'Zakończone', path: `${path}/Closed`, component: LeaguesTableClosed },\r\n    { name: 'Moje', path: `${path}/Owner`, component: LeaguesTableOwner },\r\n    { name: 'Nowa Liga', path: `${path}/NewLeague`, component: CreateLeague}\r\n  ];\r\n\r\n  return (\r\n    <Segment>\r\n      {' '}\r\n      <SubPage routing={routing} />{' '}\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default Leagues;\r\n","import React from 'react';\r\nimport { Table, Label, Icon } from 'semantic-ui-react';\r\n\r\nclass TableRow extends React.Component {\r\n\r\nisEditable() {\r\n    return (this.props.role === 'mygames' || (this.props.data.myGame && !this.props.data.goals));\r\n}\r\n\r\nrender() {\r\n    return (\r\n            <Table.Row>\r\n            <Table.Cell>\r\n                <b>{this.props.data.teams.first.name}</b> <br></br> \r\n                {this.props.data.teams.first.players.first} / {this.props.data.teams.first.players.second}\r\n            </Table.Cell>\r\n            <Table.Cell>{this.props.data.goals? this.props.data.goals.first: '-'}</Table.Cell>\r\n            <Table.Cell>{this.props.data.goals? this.props.data.goals.second: '-'}</Table.Cell>\r\n            <Table.Cell>\r\n                <b>{this.props.data.teams.second.name}</b> <br></br> \r\n                {this.props.data.teams.second.players.first} / {this.props.data.teams.second.players.second}\r\n            </Table.Cell>\r\n            <Table.Cell>{this.props.data.date.scheduled.substring(0,10)}</Table.Cell>\r\n            <Table.Cell textAlign=\"left\" collapsing>\r\n            { this.isEditable() &&  (\r\n                <Label as=\"a\" color=\"blue\" ribbon='right'>\r\n                    <Icon name=\"hand pointer\" size=\"large\" />\r\n                    Edytuj\r\n                </Label>\r\n            )}\r\n            </Table.Cell>\r\n            </Table.Row>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default TableRow;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Table } from 'semantic-ui-react';\r\nimport TableRow from './TableRow'\r\nimport Store from '../../Store';\r\n\r\nclass ScheduleTable extends React.Component {\r\n  static contextType = Store;\r\n\r\n  state = {\r\n    matches: [],\r\n    league: ''\r\n  }\r\n  getData() {\r\n    if (this.props.league !== '' & this.props.league !== this.state.league) {\r\n      axios({\r\n        url: `/api/matches/${this.props.league}/league`,\r\n        method: 'get',\r\n        headers: {'x-auth-token': localStorage.getItem('token'),},\r\n      }).then(  result => {\r\n        var myTeams = this.props.teams.map( team => team._id);\r\n          let matches = result.data.map( match => {\r\n            let myGame = false;\r\n            if (myTeams.includes(match.teams.first._id) || myTeams.includes(match.teams.second._id)) {\r\n              myGame = true;\r\n            };\r\n            match.myGame = myGame\r\n            return match;\r\n          })        \r\n        this.setState({ matches: matches, league: this.props.league });\r\n      }).catch()  \r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    this.getData()\r\n  }\r\n    \r\n\r\n  render() {\r\n    return (\r\n      <Table celled textAlign=\"center\">\r\n        <Table.Header>\r\n          <Table.Row>\r\n              <Table.HeaderCell key='player1' width={3}>\r\n                Drużyna\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell key='result1' width={1} colSpan='2'>\r\n                Wynik\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell key='player2' width={3}>\r\n                Drużyna\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell key='data' width={2}>\r\n                Data\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell key='edycja' width={1}>\r\n                \r\n              </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n        {this.state.matches.map(x => (\r\n            <TableRow key={x._id} data={x} role={this.props.role} />\r\n          ))}\r\n        </Table.Body>\r\n      \r\n        \r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScheduleTable;","import React from 'react';\r\nimport { Dropdown} from 'semantic-ui-react';\r\n\r\n    \r\nclass DropdownLeague extends React.Component {\r\n   \r\n    render() {\r\n        return( \r\n            <Dropdown selection fluid\r\n            options={this.props.options} \r\n            placeholder='Liga'  \r\n            onChange={this.props.triggerChange} \r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropdownLeague;","import React from 'react';\r\nimport { Dropdown} from 'semantic-ui-react';\r\n\r\nclass DropdownRole extends React.Component {\r\n    state = {\r\n        options: [\r\n            { key: '1', text: 'W których grasz', value:'attending' }, \r\n            { key: '2', text: 'Które założyłeś/aś', value:'mygames'}, \r\n            { key: '3', text: 'Wszystkie', value:'all'}\r\n          ]\r\n      }\r\n    render() {\r\n        return (\r\n            <Dropdown selection fluid \r\n                options={this.state.options} \r\n                placeholder='Które ligi?'  \r\n                onChange={this.props.triggerChange} \r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DropdownRole;","import React from 'react';\r\nimport { Dropdown} from 'semantic-ui-react';\r\n\r\nclass DropdownStatus extends React.Component {\r\n    state = {\r\n        options: [\r\n            { key: '1', text: 'Trwające', value:'pending' },\r\n            { key: '2', text: 'Zakończone', value:'closed'}\r\n          ]\r\n      }\r\n    render() {\r\n        return (\r\n            <Dropdown selection fluid\r\n                options={this.state.options} \r\n                placeholder='Aktualne/zakończone?'  \r\n                onChange={this.props.triggerChange} \r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DropdownStatus;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Grid, Segment, Divider} from 'semantic-ui-react';\r\nimport {  ScheduleTable, DropdownLeague, DropdownRole, DropdownStatus} from '../../components/Schedule';\r\nimport Store from '../../Store';\r\n\r\n\r\nconst filterMyTeams = (obj, myName) => {\r\n   return obj.status === 'active' &&  \r\n   (obj.players.first.name === myName ||\r\n     obj.players.second.name === myName )\r\n}\r\n\r\nconst amIPlayingThisLeague = (league, myTeams) => {\r\n  let result = false;\r\n  for (let y = 0; y < myTeams.length; y++) {\r\n    for (let i=0; i < league.teams.length; i++) {\r\n      if (myTeams[y]._id === league.teams[i].team) {\r\n        result = true;\r\n      }\r\n      if (result) break;\r\n    };\r\n  };\r\n  return result;\r\n}\r\n\r\nclass ScheduleView extends React.Component {\r\n  static contextType = Store;\r\n\r\n  state = {\r\n    status: '',\r\n    role: '',\r\n    leagues: [],\r\n    leaguesChoice: [],\r\n    chosenLeague: '',\r\n    teams: []\r\n  }\r\n  \r\n  onStatusChange = async (e, {value}) => {\r\n    await this.setState( {status: value});\r\n    this.onChangeLeagueFilter();\r\n  }   \r\n  onRoleChange = async (e, {value}) =>  {\r\n    await this.setState( {role: value});\r\n    this.onChangeLeagueFilter();\r\n  }\r\n  onLeagueChange =  async (e, {value}) =>  {\r\n    await this.setState({ chosenLeague: value})   \r\n  }\r\n\r\n  onChangeLeagueFilter = () => {\r\n    let tempLeagues = [];\r\n    \r\n    if (this.state.role === 'attending')\r\n      tempLeagues = this.state.leagues.filter( obj => amIPlayingThisLeague(obj, this.state.teams) && obj.status === this.state.status)\r\n    else if (this.state.role === 'mygames') {\r\n      tempLeagues = this.state.leagues.filter( obj =>obj.owner === this.context.me._id && obj.status === this.state.status )\r\n    }\r\n    else tempLeagues = this.state.leagues.filter( obj => obj.status === this.state.status) \r\n    this.setState({ chosenLeague: '', leaguesChoice: tempLeagues.map((obj, index) => { return {key: index, value: obj._id, text: obj.name}})\r\n    });\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    \r\n    axios({\r\n      url: '/api/leagues',\r\n      method: 'get',\r\n      headers: {\r\n          'x-auth-token': localStorage.getItem('token'),\r\n      },\r\n    }).then( result => {\r\n      this.setState({ leagues: result.data.filter(obj => obj.division === this.context.me.division )});\r\n    })\r\n\r\n    axios({\r\n      url: '/api/teams',\r\n      method: 'get',\r\n      headers: {\r\n          'x-auth-token': localStorage.getItem('token'),\r\n    },\r\n    }).then( result => {\r\n      this.setState({ teams: result.data.filter(obj => filterMyTeams(obj, this.context.me.name) )\r\n        .map(obj => {return {_id: obj._id, name: obj.name}})\r\n       });\r\n    })    \r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Segment>\r\n        <Grid>\r\n          <Grid.Column width={3}>\r\n            <DropdownRole triggerChange={this.onRoleChange} />\r\n            <Divider horizontal/>\r\n            <DropdownStatus triggerChange={this.onStatusChange} />\r\n            <Divider horizontal/>\r\n            { this.state.role && this.state.status && (\r\n              <DropdownLeague options={this.state.leaguesChoice} triggerChange={this.onLeagueChange} />\r\n            )}\r\n            \r\n          </Grid.Column>\r\n          <Grid.Column stretched width={13}>\r\n            {this.state.chosenLeague && (\r\n              <ScheduleTable league={this.state.chosenLeague} teams={this.state.teams} role ={this.state.role}/>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n  );}\r\n};\r\n\r\nexport default ScheduleView;","import React from 'react';\r\nimport { Dimmer, Loader as SemanticLoader } from 'semantic-ui-react';\r\n\r\nconst Loader = ({ text = '' }) => {\r\n  return (\r\n    <Dimmer active>\r\n      <SemanticLoader content={text} />\r\n    </Dimmer>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Store from '../../Store';\r\n\r\nclass Scores extends React.Component {\r\n  static contextType = Store;\r\n\r\n  async getLeagues(resType = 'names') {\r\n    let ret;\r\n    await axios({\r\n      url: '/api/leagues/?with=[\"team\"]',\r\n      method: 'get',\r\n      data: {},\r\n      headers: {\r\n        'x-auth-token': localStorage.token,\r\n      },\r\n    }).then(\r\n      res => {\r\n        switch (resType) {\r\n          case 'names':\r\n            ret = res.data.map(el => el.name);\r\n            break;\r\n          case 'forSelect':\r\n            ret = res.data.map(el => {\r\n              return {\r\n                key: el._id,\r\n                value: el.name,\r\n                text: el.name,\r\n              };\r\n            });\r\n            break;\r\n          case 'all':\r\n            ret = res.data;\r\n            break;\r\n          default:\r\n            ret = res.data.map(el => el.name);\r\n        }\r\n      },\r\n      err => {\r\n        console.log('Error taki:', err.errmsg);\r\n      },\r\n    );\r\n    return ret;\r\n  }\r\n\r\n  gl = async type => {\r\n    try {\r\n      let ret = await this.getLeagues(type);\r\n      switch (type) {\r\n        case 'forSelect':\r\n          this.league = ret.sort((a, b) => (a.text.toLowerCase() < b.text.toLowerCase() ? -1 : 1));\r\n          this.setState(() => {\r\n            return {\r\n              league: this.league[0].text,\r\n              leagueId: this.league[0].key,\r\n            };\r\n          });\r\n          break;\r\n        case 'all':\r\n          this.leagueAll = ret.sort((a, b) => (a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1));\r\n          if (this.leagueAll[0].teams.length > 0) {\r\n            for (let i = 0; i < this.leagueAll[0].teams.length; i++) {\r\n              let actualTeam = this.leagueAll[0].teams[i];\r\n              this.setState(() => {\r\n                // console.log(this.state.data)\r\n                return {\r\n                  data: [\r\n                    ...this.state.data,\r\n                    {\r\n                      team: actualTeam.team.name,\r\n                      points: actualTeam.statistics.matches.won * 3,\r\n                      matchesPlayed: actualTeam.statistics.matches.won + actualTeam.statistics.matches.lost,\r\n                      matchesWon: actualTeam.statistics.matches.won,\r\n                      matchesLost: actualTeam.statistics.matches.lost,\r\n                      goalsFor: actualTeam.statistics.goals.for,\r\n                      goalsAgainst: actualTeam.statistics.goals.against,\r\n                    },\r\n                  ],\r\n                };\r\n              });\r\n            }\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } catch (e) {\r\n      console.log('gl: Błąd', e);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Scores;\r\n","import React from 'react';\r\nimport Scores from './Scores';\r\nimport _ from 'lodash';\r\nimport { Form, Segment, Label, Header, Icon, Table } from 'semantic-ui-react';\r\n\r\nclass ScoresView extends Scores {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      column: null,\r\n      direction: null,\r\n      league: '',\r\n      data: [],\r\n    };\r\n\r\n    this.league = [];\r\n    this.leagueAll = [];\r\n    this.gl('forSelect');\r\n    this.gl('all');\r\n  }\r\n\r\n  handleSort = clickedColumn => () => {\r\n    const { column, data, direction } = this.state;\r\n\r\n    if (column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        data: _.sortBy(data, [clickedColumn]),\r\n        direction: 'ascending',\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      data: data.reverse(),\r\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\r\n    });\r\n  };\r\n\r\n  onSelectChange = (e, { value }) => {\r\n    const index = this.league.map(el => el.value).indexOf(value);\r\n    const id = this.league[index].key;\r\n    const leagueAllIndex = this.leagueAll.map(el => el._id).indexOf(id);\r\n\r\n    const teams = this.leagueAll[leagueAllIndex].teams;\r\n    this.prepareState(teams);\r\n\r\n    if (teams.length > 0) {\r\n      this.setState(() => {\r\n        return {\r\n          league: value,\r\n          data: this.state.data,\r\n        };\r\n      });\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          league: value,\r\n          data: [\r\n            {\r\n              team: 'Brak drużyn w lidze',\r\n              points: 0,\r\n              matchesPlayed: 0,\r\n              matchesWon: 0,\r\n              matchesLost: 0,\r\n              goalsFor: 0,\r\n              goalsAgainst: 0,\r\n            },\r\n          ],\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  prepareState = teams => {\r\n    for (let i = 0; i < teams.length; i++) {\r\n      const stats = teams[i].statistics;\r\n      const team = teams[i].team;\r\n      if (i === 0) {\r\n        this.state.data = [this.newStateData(team, stats)];\r\n      } else {\r\n        this.state.data = [...this.state.data, this.newStateData(team, stats)];\r\n      }\r\n    }\r\n  };\r\n\r\n  newStateData = (team, stats) => {\r\n    return {\r\n      team: team.name,\r\n      points: stats.matches.won * 3,\r\n      matchesPlayed: stats.matches.won + stats.matches.lost,\r\n      matchesWon: stats.matches.won,\r\n      matchesLost: stats.matches.lost,\r\n      goalsFor: stats.goals.for,\r\n      goalsAgainst: stats.goals.against,\r\n    };\r\n  };\r\n\r\n  onFormSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { column, data, direction } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\" style={{ textAlign: 'left' }}>\r\n        <Header as=\"h2\" textAlign=\"center\" style={{ paddingLeft: '40px' }}>\r\n          <Icon name=\"ordered list\" />\r\n          <Header.Content>Przejrzyj wyniki</Header.Content>\r\n        </Header>\r\n\r\n        <Segment>\r\n          <Form onSubmit={this.onFormSubmit}></Form>\r\n          <Form.Group>\r\n            <Form.Field>\r\n              <Label>Lista lig</Label>\r\n              <Form.Dropdown\r\n                key=\"leagueSelect\"\r\n                name=\"leagueSelect\"\r\n                selection\r\n                value={this.state.league}\r\n                options={this.league}\r\n                onChange={(e, v) => this.onSelectChange(e, v)}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n        </Segment>\r\n        { this.state.data[0] && this.state.data[0].team ==='Brak drużyn w lidze' && (\r\n          <>\r\n          <br/>\r\n          <div>\r\n            <h3> Wygląda na to, że nikt się tu jeszcze nie zapisał.</h3>\r\n          </div>\r\n          </>\r\n        )}\r\n        { this.state.data[0] && this.state.data[0].team !=='Brak drużyn w lidze' && (\r\n          <Table sortable celled fixed>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell sorted={column === 'team' ? direction : null} onClick={this.handleSort('team')}>\r\n                Nazwa Drużyny\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell sorted={column === 'points' ? direction : null} onClick={this.handleSort('points')}>\r\n                Punkty\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === 'matchesPlayed' ? direction : null}\r\n                onClick={this.handleSort('matchesPlayed')}\r\n              >\r\n                Rozegrane mecze\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === 'matchesWon' ? direction : null}\r\n                onClick={this.handleSort('matchesWon')}\r\n              >\r\n                Wygrane mecze\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === 'matchesLost' ? direction : null}\r\n                onClick={this.handleSort('matchesLost')}\r\n              >\r\n                Przegrane mecze\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell sorted={column === 'goalsFor' ? direction : null} onClick={this.handleSort('goalsFor')}>\r\n                Strzelone bramki\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === 'goalsAgainst' ? direction : null}\r\n                onClick={this.handleSort('goalsAgainst')}\r\n              >\r\n                Stracone bramki\r\n              </Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {_.map(data, ({ team, points, matchesPlayed, matchesWon, matchesLost, goalsFor, goalsAgainst }) => (\r\n              <Table.Row key={team}>\r\n                <Table.Cell>{team}</Table.Cell>\r\n                <Table.Cell>{points}</Table.Cell>\r\n                <Table.Cell>{matchesPlayed}</Table.Cell>\r\n                <Table.Cell>{matchesWon}</Table.Cell>\r\n                <Table.Cell>{matchesLost}</Table.Cell>\r\n                <Table.Cell>{goalsFor}</Table.Cell>\r\n                <Table.Cell>{goalsAgainst}</Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        )}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScoresView;\r\n","import React from 'react';\r\nimport ScoresView from '../../components/Scores/ScoresView';\r\n\r\nconst ShowScores = () => {\r\n  return <ScoresView />;\r\n};\r\n\r\nexport default ShowScores;\r\n","import React, { Component } from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\n\r\nclass Profile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          Twój profil\r\n      </Segment>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile;","import React, { useState, useEffect, useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport Store, { StoreProvider } from './Store';\r\nimport setHeaders from './utils/setHeaders';\r\nimport AppBar from './components/AppBar';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport Home from './Views/Homepage';\r\nimport Login from './Views/Login';\r\nimport Teams from './Views/Teams';\r\nimport Leagues from './Views/Leagues';\r\nimport Schedule from './Views/Schedule';\r\nimport Loader from './components/Loader';\r\nimport NewLeague from './Views/NewLeague';\r\nimport ShowScores from './Views/Scores';\r\nimport { Container } from 'semantic-ui-react';\r\nimport Profile from './components/Homepage/Profile'\r\n\r\nconst App = () => {\r\n  const { isLogged, changeStore } = useContext(Store);\r\n  const [isLoading, setLoading] = useState(isLogged);\r\n\r\n  useEffect(() => {\r\n    if (!isLogged) return;\r\n    (async () => {\r\n      try {\r\n        const response = await fetch('/api/login/me', setHeaders());\r\n        if (response.status === 400) {\r\n          localStorage.removeItem('token');\r\n          changeStore('isLogged', false);\r\n          changeStore('me', null);\r\n          return;\r\n        }\r\n        const data = await response.json();\r\n        changeStore('isLogged', true);\r\n        changeStore('me', data);\r\n      } catch (ex) {\r\n        console.error('Serwer nie odpowiada'); //Tu wyświetlić coś userowi że nie ma połączenia z serwerem\r\n        console.error('Error', ex);\r\n      }\r\n    })();\r\n    setLoading(false);\r\n  }, [changeStore, isLogged]);\r\n  return (\r\n    <BrowserRouter>\r\n      <Container>\r\n        <AppBar />\r\n        {isLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <PrivateRoute path=\"/Schedule\" component={Schedule} />\r\n            <PrivateRoute path=\"/Leagues\" component={Leagues} />\r\n            <PrivateRoute path=\"/Teams\" component={Teams} />\r\n            <PrivateRoute exact path=\"/\" component={Home} />\r\n            <PrivateRoute exact path=\"/NewLeague\" component={NewLeague} />\r\n            <PrivateRoute exact path=\"/Scores\" component={ShowScores} />\r\n            <PrivateRoute exact path=\"/Profile\" component={Profile} />\r\n            <Route render={() => <Redirect to=\"/\" />} />\r\n          </Switch>\r\n        )}\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <StoreProvider>\r\n    <App />\r\n  </StoreProvider>,\r\n  document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["Store.js","utils/setHeaders.js","components/AppBar/index.jsx","components/PrivateRoute/index.jsx","Views/Homepage/index.jsx","components/NegativeMessage.js","components/Login.js","components/Register.js","components/RegisterOrLogin.js","Views/Login/index.jsx","components/Teams/Teams.jsx","components/Teams/TeamCreate.jsx","components/Leagues/LeaguesTable.jsx","utils/date.js","components/Modals/AskModal.jsx","components/Teams/TeamViewGrid.jsx","components/Teams/TeamViewGridWithSearch.jsx","components/Leagues/LeaguesTableRowOpen.jsx","components/Leagues/LeaguesTableRowPending.jsx","components/Leagues/LeaguesTableRowClosed.jsx","components/Leagues/LeaguesTableRowOwner.jsx","components/Teams/TeamViewLeagues.jsx","components/Teams/TeamView.jsx","components/Teams/index.jsx","Views/Teams/index.jsx","components/SubPage/index.jsx","Views/Leagues/index.jsx","Views/Schedule/index.jsx","components/Loader/index.jsx","components/NewLeague.js","Views/NewLeague/index.jsx","components/Scores/Scores.jsx","components/Scores/ScoresView.jsx","Views/Scores/index.jsx","index.js"],"names":["Context","React","createContext","StoreProvider","state","isLogged","localStorage","getItem","me","changeStore","name","value","setState","Provider","this","props","children","Component","headers","AppBar","useContext","Store","className","alt","src","Menu","secondary","Item","as","Link","to","NavLink","activeClassName","exact","onClick","removeItem","position","PrivateRoute","component","rest","render","Home","NegativeMessage","Message","negative","Header","header","paragraph","defaultProps","Login","onFormSubmit","e","a","preventDefault","termEmail","termPass","email","password","fetch","method","body","JSON","stringify","response","status","token","get","setItem","jwt","_id","json","context","invalidData","Segment","Form","onSubmit","Input","type","label","placeholder","onChange","target","Button","contextType","Register","division","divisions","text","selected","getDivisions","axios","data","console","log","filter","map","error","onFormChange","nick","pass","surname","nickname","alert","Select","options","Field","Checkbox","RegisterOrLogin","showLoginBox","isLoginOpen","isRegisterOpen","showRegisterBox","Teams","_gt","_getTeams","ret","teams","sort","b","toLowerCase","length","team","teamId","key","teamsAll","players","first","second","statistics","matches","won","lost","goals","for","against","leagues","errmsg","isMe","url","then","res","users","el","err","resType","role","TeamCreate","onInputChange","errHeader","errMessage","newTeam","onSelectChange","player1","player2","d","_validateForm","_postTeam","onClickCancel","term","warnHeader","warnMessage","infoHeader","infoMessage","postSuccess","onClickDalej","teamOK","playersOK","getUsers","Group","horizontal","Label","inline","Dropdown","selection","v","content","warning","success","LeaguesTable","refresh","query","componentDidMount","Table","celled","textAlign","Row","x","HeaderCell","width","Body","row","formatDate","moment","format","AskModal","Modal","open","onClose","closeOnDimmerClick","size","Content","Actions","onPositive","positive","labelPosition","icon","onNegative","TeamViewGridItem","Icon","Description","player","unpackMatches","unpackGoals","TeamViewGridRow","Grid","Column","onClickFactory","TeamViewGrid","columns","_","chunk","i","initialState","isLoading","results","TeamViewGridWithSearch","handleSearchChange","setTimeout","re","RegExp","escapeRegExp","result","test","teamViewGridProps","centered","Search","loading","onSearchChange","debounce","leading","input","unpackPlayers","unpackPlayer","TeamViewModal","askModalProps","openModalFactory","league","closeModal","setHeaders","id","finally","closeIcon","scrolling","LeaguesTableRowOpen","isModalOpen","openModal","resp","dateCreated","date","created","Cell","description","owner","isUserInLeague","color","ribbon","userTeamInLeague","LeaguesTableRowPending","dateStarted","started","LeaguesTableRowClosed","dateClosed","closed","LeaguesTableRowOwner","LeaguesTableInTeamView","fetchLeagues","ComponentTeamViewLeagues","config","LeaguesTableClosed","TeamView","index","indexOf","teamsAllIndex","stats","onClickEdit","editable","Divider","readOnly","info","colSpan","ComponentTeams","handleItemClick","activeItem","style","paddingLeft","stretched","fluid","vertical","tabular","active","SubPageRouter","routing","path","SubPageMenu","SubPage","queryLeaguesTableOpen","user","inLeague","teamName","LeaguesTableOpen","LeaguesTablePending","LeaguesTableOwner","Leagues","match","Schedule","Loader","Dimmer","NewLeague","startDate","postSuccessful","handleInputChange","event","handleDateChange","postLeague","catch","message","widths","maxLength","control","minDate","Date","now","placeholderText","TextArea","CreateLeague","Scores","gl","getLeagues","leagueId","leagueAll","actualTeam","points","matchesPlayed","matchesWon","matchesLost","goalsFor","goalsAgainst","ScoresView","handleSort","clickedColumn","column","direction","reverse","sortBy","leagueAllIndex","prepareState","newStateData","sortable","fixed","sorted","ShowScores","ReactDOM","useState","setLoading","useEffect","Container","document","querySelector"],"mappings":"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","file":"static/js/main.b92dd294.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport class StoreProvider extends React.Component {\r\n  state = { isLogged: localStorage.getItem('token') ? true : false, me: null };\r\n\r\n  changeStore = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={{ ...this.state, changeStore: this.changeStore }}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Context;\r\n","export default () => ({\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'x-auth-token': localStorage.getItem('token'),\r\n  },\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport Store from '../../Store';\r\n\r\nconst AppBar = () => {\r\n  const { isLogged, changeStore } = useContext(Store);\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('id');\r\n    changeStore('isLogged', false);\r\n    changeStore('me', null);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"center\">\r\n        <img alt=\"nie ma obrazka\" src=\"/images/nowelogo.jpg\" />\r\n      </div>\r\n      <Menu secondary>\r\n        <Menu.Item as={Link} name=\"PANkarzyki\" to=\"/\" />\r\n\r\n        {isLogged && (\r\n          <Menu.Menu>\r\n            <Menu.Item as={NavLink} name=\"Główna\" to=\"/\" activeClassName=\"active\" exact />\r\n            <Menu.Item as={NavLink} name=\"Terminarz\" to=\"/Schedule\" activeClassName=\"active\" />\r\n            <Menu.Item as={NavLink} name=\"Ligi\" to=\"/Leagues\" activeClassName=\"active\" />\r\n            <Menu.Item as={NavLink} name=\"Drużyny\" to=\"/Teams\" activeClassName=\"active\" />\r\n            <Menu.Item as={NavLink} name=\"Nowa Liga\" to=\"/NewLeague\" activeClassName=\"active\" />\r\n            <Menu.Item as={NavLink} name=\"Wyniki\" to=\"/Scores\" activeClassName=\"active\" />\r\n          </Menu.Menu>\r\n        )}\r\n        <Menu.Item as={Link} name=\"Wyjdź\" to=\"/\" onClick={handleLogout} position=\"right\" />\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport Store from '../../Store';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isLogged } = useContext(Store);\r\n  return <Route {...rest} render={props => (isLogged ? <Component {...props} /> : <Redirect to=\"/login\" />)} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <main>\r\n        <p>\r\n          O co chodzi? Gramy ligę!! Dobierz się w drużynę, zapisz do rozgrywek, zapisuj wyniki, sprawdzaj kto kogo\r\n          złoił. Wyłonimy zwycięzcę! :) Wanna Join?\r\n        </p>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nconst NegativeMessage = props => (\r\n  <Message negative>\r\n    <Message.Header>{props.header}</Message.Header>\r\n    <p>{props.paragraph}</p>\r\n  </Message>\r\n);\r\n\r\nNegativeMessage.defaultProps = {\r\n  header: 'Błąd!',\r\n  paragraph: 'Spróbuj ponownie',\r\n};\r\n\r\nexport default NegativeMessage;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport NegativeMessage from './NegativeMessage';\r\nimport jwt from 'jwt-decode';\r\n\r\nimport Store from '../Store';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isLogged: false, invalidData: false, termEmail: '', termPass: '' };\r\n  }\r\n\r\n  static contextType = Store;\r\n\r\n  onFormSubmit = async e => {\r\n    e.preventDefault();\r\n    const [email, password] = [this.state.termEmail, this.state.termPass];\r\n\r\n    const response = await fetch('/api/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    if (response.status === 200) {\r\n      const token = response.headers.get('x-auth-token');\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('id', jwt(token)._id);\r\n      await response.json();\r\n      this.context.changeStore('isLogged', true);\r\n      this.setState({ isLogged: true });\r\n    } else {\r\n      this.setState({ invalidData: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.context.isLogged) return <Redirect to=\"/\" />;\r\n    return (\r\n      <Segment>\r\n        Logowanie\r\n        {this.state.invalidData && <NegativeMessage header=\"Błędny email lub hasło\" />}\r\n        <Form onSubmit={this.onFormSubmit}>\r\n          <Form.Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            placeholder=\"Email\"\r\n            value={this.state.termEmail}\r\n            onChange={e => this.setState({ termEmail: e.target.value })}\r\n          />\r\n          <Form.Input\r\n            type=\"password\"\r\n            label=\"Hasło\"\r\n            placeholder=\"Hasło\"\r\n            value={this.state.termPass}\r\n            onChange={e => this.setState({ termPass: e.target.value })}\r\n          />\r\n          <Button type=\"submit\">Zaloguj!</Button>\r\n        </Form>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Checkbox, Form, Segment } from 'semantic-ui-react';\r\n\r\nclass Register extends React.Component {\r\n  state = {\r\n    division: 'WRO',\r\n    divisions: [\r\n      { text: 'Wrocek', value: 'WRO', selected: true },\r\n      { text: 'Warszawka', value: 'WAR' },\r\n      { text: 'Kraków', value: 'KRA' },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDivisions();\r\n  }\r\n\r\n  getDivisions = async () => {\r\n    try {\r\n      const { data } = await axios.get('/api/division');\r\n      console.log(data);\r\n      const divisions = data.filter(({ status }) => status !== 'deleted').map(({ _id }) => ({ value: _id, text: _id }));\r\n      this.setState({ divisions });\r\n    } catch (ex) {\r\n      console.error(ex);\r\n    }\r\n  };\r\n\r\n  onFormChange = ({ target }, { name, value }) => {\r\n    //zamiane na controlled, walidacje i pierdoly zostawiam Tobie Piotrek\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onFormSubmit = async e => {\r\n    e.preventDefault();\r\n    const [nick, email, pass, , name, surname] = e.target;\r\n\r\n    const response = await fetch('/api/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: email.value,\r\n        password: pass.value,\r\n        nickname: nick.value,\r\n        name: name.value,\r\n        surname: surname.value,\r\n        division: this.state.division,\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      alert('Konto utworzone, teraz weź się zaloguj');\r\n    } else {\r\n      alert('Error');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Segment>\r\n        Rejestracja\r\n        <Form onSubmit={this.onFormSubmit}>\r\n          <Form.Input name=\"nickname\" label=\"Nick\" placeholder=\"Nick\" onChange={this.onFormChange} />\r\n          <Form.Input name=\"email\" type=\"email\" label=\"Email\" placeholder=\"Email\" />\r\n          <Form.Input type=\"password\" label=\"Hasło\" placeholder=\"Hasło\" />\r\n          <Form.Input type=\"password\" label=\"Powtórz hasło\" placeholder=\"Powtórz hasło\" />\r\n          <Form.Input label=\"Imie\" placeholder=\"Imie\" />\r\n          <Form.Input label=\"Nazwisko\" placeholder=\"Nazwisko\" />\r\n          <Form.Select\r\n            name=\"division\"\r\n            options={this.state.divisions}\r\n            label=\"Dywizja\"\r\n            value={this.state.division}\r\n            onChange={this.onFormChange}\r\n          />\r\n          <Form.Field>\r\n            <Checkbox label=\"Akceptuje regulamin i zgadzam się z warunkami użytkowania\" />\r\n          </Form.Field>\r\n          <Button type=\"submit\">Rejestruj!</Button>\r\n        </Form>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport { Button, Segment } from 'semantic-ui-react';\r\n\r\nclass RegisterOrLogin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isLoginOpen: true, isRegisterOpen: false };\r\n  }\r\n\r\n  showLoginBox = () => {\r\n    this.setState({ isLoginOpen: true, isRegisterOpen: false });\r\n  };\r\n\r\n  showRegisterBox = () => {\r\n    this.setState({ isLoginOpen: false, isRegisterOpen: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Segment>\r\n          <Button onClick={this.showLoginBox}>Logowanie</Button>\r\n          <Button onClick={this.showRegisterBox}>Rejestracja</Button>\r\n        </Segment>\r\n        <Segment>\r\n          {this.state.isLoginOpen && <Login />}\r\n          {this.state.isRegisterOpen && <Register />}\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterOrLogin;\r\n","import React from 'react';\r\nimport RegisterOrLogin from '../../components/RegisterOrLogin';\r\n\r\nconst Login = () => {\r\n  return <RegisterOrLogin />;\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Store from '../../Store';\r\n\r\nclass Teams extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isMe: false\r\n    }\r\n  }\r\n\r\n  static contextType = Store;\r\n\r\n  componentDidMount() {\r\n    this.setState( () => { return { isMe: !!this.context.me }; } );\r\n    // console.log('Teams->', this.context);\r\n  }\r\n\r\n  async getUsers(division = '') {\r\n    await axios(\r\n      {\r\n        url: `/api/users?division=${this.context.me.division}`,\r\n        method: 'get',\r\n        data: {},\r\n        headers:\r\n        {\r\n          'x-auth-token': localStorage.token\r\n        }\r\n      }\r\n    ).then(\r\n      (res) => {\r\n        this.users = res.data.map( (el) => { return {\r\n          key: el._id,\r\n          value: `${el.surname}, ${el.name}`,\r\n          text: `${el._id}: ${el.surname || '(brak)'}, ${el.name || '(brak)'}`\r\n        }; } ).sort( (a, b) => { return (a.text.toLowerCase() < b.text.toLowerCase()) ? -1 : 1; } );\r\n      },\r\n      (err) => { console.log('getUsers->', err.errmsg); }\r\n    )\r\n  }\r\n\r\n  async _getTeams(resType = 'names', id) {\r\n    let ret;\r\n    await axios(\r\n      {\r\n        url: `/api/teams/`,\r\n        method: 'get',\r\n        data: {},\r\n        headers:\r\n        {\r\n          'x-auth-token': localStorage.token\r\n        }\r\n      }\r\n    ).then(\r\n      (res) => { \r\n        switch(resType) {\r\n          case 'names':\r\n            ret = res.data.map( (el) => { return el.name; } );\r\n            break;\r\n          case 'forSelect':\r\n            if (this.context.me.role === 'admin') {\r\n              ret = res.data.map( (el) => { \r\n                return {\r\n                  key: el._id,\r\n                  value: el.name,\r\n                  text: el.name\r\n                }; \r\n              } );\r\n            } else {\r\n              ret = res.data\r\n                .filter( (el) => { \r\n                  return (el.players.first._id === this.context.me._id) || (el.players.second._id === this.context.me._id) ; \r\n                } )\r\n                .map( (el) => { \r\n                return {\r\n                  key: el._id,\r\n                  value: el.name,\r\n                  text: el.name\r\n                }; \r\n              } );\r\n              // if (ret.length === 0) {\r\n              //   ret = [{\r\n              //     key: '0',\r\n              //     value: '',\r\n              //     text: ''\r\n              //   }]\r\n              // }\r\n            }\r\n            break;\r\n          case 'all':\r\n            if (this.context.me.role === 'admin') {\r\n              ret = res.data;\r\n            } else {\r\n              ret = res.data.filter( (el) => { \r\n                return (el.players.first._id === this.context.me._id) || (el.players.second._id === this.context.me._id) ; \r\n              } );\r\n            }\r\n            break;\r\n          default:\r\n            if (this.context.me.role === 'admin') {\r\n              ret = res.data.map( (el) => { return el.name; } );\r\n            } else {\r\n              ret = res.data\r\n                .filter( (el) => { \r\n                  return (el.players.first._id === this.context.me._id) || (el.players.second._id === this.context.me._id) ; \r\n                } )\r\n                .map( (el) => { return el.name; } );\r\n            }\r\n        };\r\n      },\r\n      (err) => { console.log('_getTeams->', err.errmsg); }\r\n    )\r\n    return ret;\r\n  }\r\n\r\n  _gt = async (type) => {\r\n    let ret;\r\n    try { \r\n      ret = await this._getTeams(type); \r\n      switch(type) {\r\n        case 'forSelect':\r\n          this.teams = ret;\r\n          this.teams.sort( (a, b) => { return (a.text.toLowerCase() < b.text.toLowerCase()) ? -1 : 1; } ); \r\n          this.setState( \r\n            () => { if (this.teams.length === 0) {\r\n              return { \r\n                team: '',\r\n                teamId: ''\r\n              }\r\n            } else {\r\n              return { \r\n                team: this.teams[0].text,\r\n                teamId:  this.teams[0].key\r\n              }\r\n            }}\r\n          );\r\n          break;\r\n        case 'all':\r\n          this.teamsAll = ret;\r\n          this.teamsAll.sort( (a, b) => { return (a.name.toLowerCase() < b.name.toLowerCase()) ? -1 : 1; } ); \r\n          this.setState( \r\n            () => { if (this.teamsAll.length === 0) {\r\n              return { \r\n                players: {\r\n                  first: {\r\n                    _id: '',\r\n                    name: ''\r\n                  },\r\n                  second: {\r\n                    _id: '',\r\n                    name: ''\r\n                  }\r\n                },\r\n                statistics: {\r\n                  matches: {\r\n                    won: 0,\r\n                    lost: 0\r\n                  },\r\n                  goals: {\r\n                    for: 0,\r\n                    against: 0\r\n                  }\r\n                },\r\n                leagues: []\r\n              }\r\n            } else {\r\n                return { \r\n                  players: {\r\n                    first: {\r\n                      _id: this.teamsAll[0].players.first._id,\r\n                      name: `${this.teamsAll[0].players.first.surname || '(brak)'}, ${this.teamsAll[0].players.first.name || '(brak)'}`\r\n                    },\r\n                    second: {\r\n                      _id: this.teamsAll[0].players.second._id,\r\n                      name: `${this.teamsAll[0].players.second.surname || '(brak)'}, ${this.teamsAll[0].players.second.name || '(brak)'}`\r\n                    }\r\n                  },\r\n                  statistics: {\r\n                    matches: {\r\n                      won: this.teamsAll[0].statistics.matches.won,\r\n                      lost: this.teamsAll[0].statistics.matches.lost\r\n                    },\r\n                    goals: {\r\n                      for: this.teamsAll[0].statistics.goals.for,\r\n                      against: this.teamsAll[0].statistics.goals.against\r\n                    }\r\n                  },\r\n                  leagues: this.teamsAll[0].leagues\r\n                }\r\n              }\r\n            }\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    catch (e) { console.log('_gt: Coś nie tak', e.errmsg); };\r\n  }\r\n\r\n  _getDivisions() {\r\n    return [\r\n      // powinno się ciągnąć z bazy, ale nie znalazłem endpointa na razie...\r\n      { key: 'WRO', value: 'WRO', text: 'Wrocław' },\r\n      { key: 'KRK', value: 'KRK', text: 'Kraków' },\r\n      { key: 'WAW', value: 'WAW', text: 'Warszawa' },\r\n      { key: 'League_Division_0', value: 'League_Division_0', text: 'League_Division_0' },\r\n    ];\r\n  }\r\n\r\n}\r\n\r\nexport default Teams;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Teams from './Teams';\r\nimport { Form, Segment, Label, Input, Message } from 'semantic-ui-react';\r\nimport Store from '../../Store';\r\n\r\nclass TeamCreate extends Teams {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isMe: false,\r\n      term: '',\r\n      newTeam: '',\r\n      player1: '',\r\n      player2: '',\r\n      errHeader: '',\r\n      errMessage: '',\r\n      warnHeader: '',\r\n      warnMessage: '',\r\n      infoHeader: '',\r\n      infoMessage: '',\r\n      postSuccess: false\r\n    };\r\n\r\n    this.teams = [];\r\n    this._gt('forSelect');\r\n\r\n    this.users = [];\r\n  }\r\n\r\n  static contextType = Store;\r\n\r\n  componentDidMount() {\r\n    this.setState( () => { return { isMe: !!this.context.me }; } );\r\n    // console.log('TeamsCreate->', this.context);\r\n    this.getUsers();\r\n  }\r\n\r\n  onInputChange = e => {\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        errHeader: '',\r\n        errMessage: '',\r\n        newTeam: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  onSelectChange = (e, { value, name }) => {\r\n    switch (name) {\r\n      case 'player1':\r\n        this.setState(() => {\r\n          return {\r\n            player1: value,\r\n            errHeader: '',\r\n            errMessage: '',\r\n          };\r\n        });\r\n        break;\r\n      case 'player2':\r\n        this.setState(() => {\r\n          return {\r\n            player2: value,\r\n            errHeader: '',\r\n            errMessage: '',\r\n          };\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  onFormSubmit = (e, d) => {\r\n    e.preventDefault();\r\n    if (d.name !== 'btnCancel') {\r\n      if (this._validateForm()) {\r\n        this._postTeam();\r\n      }\r\n    }\r\n  };\r\n\r\n  onClickCancel = (e, d) => {\r\n    // this.setState(() => {\r\n    //   return { postSuccess: true };\r\n    // });\r\n    this.setState( () => { return {\r\n      term: '',\r\n      newTeam: '',\r\n      player1: '',\r\n      player2: '',\r\n      errHeader: '',\r\n      errMessage: '',\r\n      warnHeader: '',\r\n      warnMessage: '',\r\n      infoHeader: '',\r\n      infoMessage: '',\r\n      postSuccess: false\r\n    } } )\r\n  };\r\n\r\n  onClickDalej = (e, d) => {\r\n    this.setState( () => { return {\r\n      term: '',\r\n      newTeam: '',\r\n      player1: '',\r\n      player2: '',\r\n      errHeader: '',\r\n      errMessage: '',\r\n      warnHeader: '',\r\n      warnMessage: '',\r\n      infoHeader: '',\r\n      infoMessage: '',\r\n      postSuccess: false\r\n    } } )\r\n  }\r\n\r\n  _validateForm = () => {\r\n    let teamOK = true;\r\n    let playersOK = true;\r\n    const team = this.state.newTeam;\r\n    if (team) {\r\n      if (\r\n        this.teams.filter(el => {\r\n          return el.text === team;\r\n        }).length\r\n      ) {\r\n        this.setState(() => {\r\n          return {\r\n            errHeader: 'BŁĄD!',\r\n            errMessage: 'Drużyna o tej nazwie już istnieje',\r\n          };\r\n        });\r\n        teamOK = false;\r\n      } else {\r\n        this.setState(() => {\r\n          return {\r\n            errHeader: '',\r\n            errMessage: '',\r\n          };\r\n        });\r\n      }\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          errHeader: 'BŁĄD!',\r\n          errMessage: 'Drużyna musi mieć nazwę',\r\n        };\r\n      });\r\n      teamOK = false;\r\n    }\r\n\r\n    if (!teamOK) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.state.player1 || !this.state.player2) {\r\n      this.setState(() => {\r\n        return {\r\n          errHeader: 'BŁĄD!',\r\n          errMessage: 'Musisz wskazać obydwu graczy',\r\n        };\r\n      });\r\n      playersOK = false;\r\n    }\r\n    if (this.state.player1 && this.state.player2 && this.state.player1 === this.state.player2) {\r\n      this.setState(() => {\r\n        return {\r\n          warnHeader: 'UWAGA!',\r\n          warnMessage: 'Właśnie utworzyłeś drużynę jednoosobową',\r\n        };\r\n      });\r\n      playersOK = true;\r\n    }\r\n    return playersOK;\r\n  };\r\n\r\n  async _postTeam() {\r\n    // eslint-disable-next-line\r\n    const teams = await axios({\r\n      url: '/api/teams/',\r\n      method: 'post',\r\n      data: {\r\n        name: this.state.newTeam,\r\n        players: {\r\n          first: this.users.filter(el => {\r\n            return el.value === this.state.player1;\r\n          })[0].key,\r\n          second: this.users.filter(el => {\r\n            return el.value === this.state.player2;\r\n          })[0].key,\r\n        },\r\n        status: 'active',\r\n      },\r\n      headers: {\r\n        'x-auth-token': localStorage.token,\r\n      },\r\n    }).then(\r\n      res => {\r\n        this.setState(() => {\r\n          return {\r\n            postSuccess: true,\r\n            infoHeader: 'BRAWO!',\r\n            infoMessage: 'Drużyna została zapisana'\r\n          };\r\n        });\r\n      },\r\n      err => {\r\n        console.log('_postTeam', err.errmsg);\r\n      },\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // if (this.state.postSuccess) return <Redirect to=\"/\" />;\r\n    return (\r\n      <>\r\n        <Segment.Group horizontal>\r\n          <Segment>\r\n            {/* <Form onSubmit={this, this.onFormSubmit}> */}\r\n            <Form onSubmit={this.onFormSubmit}>\r\n              <Form.Group>\r\n                <Form.Field>\r\n                  <Label>Nazwa drużyny</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"wprowadź nazwę drużyny...\"\r\n                    value={this.state.newTeam}\r\n                    onChange={e => {\r\n                      this.onInputChange(e);\r\n                    }}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Field>\r\n                  <Label>Wybierz graczy</Label>\r\n                  <Form.Group inline>\r\n                    {(this.context.me.role === 'admin') && (\r\n                      <Form.Dropdown\r\n                        key=\"player1\"\r\n                        name=\"player1\"\r\n                        placeholder=\"wskaż gracza 1...\"\r\n                        selection\r\n                        value={this.state.player1}\r\n                        options={this.users}\r\n                        onChange={(e, v) => this.onSelectChange(e, v)}\r\n                      />\r\n                    )}\r\n                    {(this.context.me.role === 'player') && (\r\n                      <Form.Dropdown\r\n                        key=\"player1\"\r\n                        name=\"player1\"\r\n                        placeholder=\"wskaż gracza 1...\"\r\n                        selection\r\n                        value={this.state.player1}\r\n                        options={this.users.filter( (el) => { return el.text === `${this.context.me._id}: ${this.context.me.surname}, ${this.context.me.name}`; })}\r\n                        onChange={(e, v) => this.onSelectChange(e, v)}\r\n                      />\r\n                    )}\r\n                    <Form.Dropdown\r\n                      key=\"player2\"\r\n                      name=\"player2\"\r\n                      placeholder=\"wskaż gracza 2...\"\r\n                      selection\r\n                      value={this.state.player2}\r\n                      options={this.users}\r\n                      onChange={(e, v) => this.onSelectChange(e, v)}\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Form>\r\n            {this.state.errHeader + this.state.errMessage !== '' && (\r\n              <Form error>\r\n                <Message error header={this.state.errHeader} content={this.state.errMessage} />\r\n              </Form>\r\n            )}\r\n            {this.state.warnHeader + this.state.warnMessage !== '' && (\r\n              <Form warning>\r\n                <Message\r\n                  warning\r\n                  header={this.state.warnHeader}\r\n                  content={this.state.warnMessage}\r\n                />\r\n              </Form>\r\n            )}\r\n            {this.state.infoHeader + this.state.infoMessage !== '' && (\r\n              <Form success>\r\n                <Message\r\n                  success\r\n                  header={this.state.infoHeader}\r\n                  content={this.state.infoMessage}\r\n                />\r\n                <Form.Button name=\"btnDalej\" onClick={this.onClickDalej}>Dalej</Form.Button>\r\n              </Form>\r\n            )}\r\n          </Segment>\r\n        </Segment.Group>\r\n        {this.state.warnHeader + this.state.warnMessage + this.state.infoHeader + this.state.infoMessage === '' && (\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Button name=\"btnSave\" onClick={this.onFormSubmit}>Zapisz</Form.Button>\r\n              <Form.Button name=\"btnCancel\" onClick={this.onClickCancel}>Anuluj</Form.Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default TeamCreate;\r\n","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nclass LeaguesTable extends React.Component {\r\n  state = {\r\n    leagues: [],\r\n  };\r\n\r\n  refresh = () => {\r\n    this.props.query().then(leagues => this.setState({ leagues }));\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.refresh();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Table celled textAlign=\"center\">\r\n        <Table.Header>\r\n          <Table.Row>\r\n            {this.props.headers.map(x => (\r\n              <Table.HeaderCell key={x.name} width={x.width}>\r\n                {x.name}\r\n              </Table.HeaderCell>\r\n            ))}\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {this.state.leagues.map(x => (\r\n            <this.props.row key={x._id} data={x} refresh={this.refresh} />\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaguesTable;\r\n","import * as moment from 'moment';\r\n\r\nconst formatDate = x => (x ? moment(x).format('DD.MM.YYYY') : 'Brak');\r\n\r\nexport { formatDate };\r\n","import React from 'react';\r\nimport { Modal, Button } from 'semantic-ui-react';\r\nconst AskModal = props => {\r\n  const onPositive = () => {\r\n    (props.onPositive || (() => {}))();\r\n    props.onClose();\r\n  };\r\n\r\n  const onNegative = () => {\r\n    (props.onNegative || (() => {}))();\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal open={props.open} onClose={props.onClose} closeOnDimmerClick={false} size=\"small\">\r\n      <Modal.Header>{props.header}</Modal.Header>\r\n      {props.children ? <Modal.Content>{props.children}</Modal.Content> : ''}\r\n      <Modal.Actions>\r\n        <Button onClick={onPositive} positive labelPosition=\"right\" icon=\"checkmark\" content={props.positive} />\r\n        <Button onClick={onNegative} negative labelPosition=\"right\" icon=\"close\" content={props.negative} />\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AskModal;\r\n","import React from 'react';\r\nimport { Grid, Segment, Item, Icon } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\n\r\nconst TeamViewGridItem = props => {\r\n  const { team, onClick } = props;\r\n\r\n  const unpackMatches = team => {\r\n    const matches = team.statistics.matches;\r\n    return `${matches.won + matches.lost}/${matches.won}/${matches.lost}`;\r\n  };\r\n\r\n  const unpackGoals = team => {\r\n    const goals = team.statistics.goals;\r\n    return `${goals.for}/${goals.against}/${goals.for - goals.against}`;\r\n  };\r\n\r\n  return (\r\n    <Item as=\"a\" onClick={onClick} className=\"team-view-grid-item\">\r\n      <Segment>\r\n        <Icon name=\"users\" size=\"large\" />\r\n        <Item.Content>\r\n          <Item.Header>{team.name}</Item.Header>\r\n          <Item.Description>\r\n            Gracz: {team.player} <br />\r\n            Wyniki: {unpackMatches(team)}/{unpackGoals(team)}\r\n          </Item.Description>\r\n        </Item.Content>\r\n      </Segment>\r\n    </Item>\r\n  );\r\n};\r\n\r\nconst TeamViewGridRow = props => {\r\n  return (\r\n    <Grid.Row>\r\n      {props.teams.map(x => (\r\n        <Grid.Column key={`c_${x.name}`}>\r\n          <TeamViewGridItem team={x} onClick={props.onClickFactory(x)} />\r\n        </Grid.Column>\r\n      ))}\r\n    </Grid.Row>\r\n  );\r\n};\r\n\r\nconst TeamViewGrid = props => {\r\n  return (\r\n    <Grid columns={props.columns} textAlign=\"center\">\r\n      {_.chunk(props.teams, props.columns).map((x, i) => (\r\n        <TeamViewGridRow key={`r_${i}`} teams={x} onClickFactory={props.onClickFactory} />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TeamViewGrid;\r\n","import React from 'react';\r\nimport TeamViewGrid from './TeamViewGrid';\r\nimport _ from 'lodash';\r\nimport { Search, Grid } from 'semantic-ui-react';\r\n\r\nconst initialState = { isLoading: false, results: [], value: '' };\r\nclass TeamViewGridWithSearch extends React.Component {\r\n  state = initialState;\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value });\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState);\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\r\n      const isMatch = result => re.test(result.name) || re.test(result.player);\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(this.props.teams, isMatch),\r\n      });\r\n    }, 300);\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, value, results } = this.state;\r\n    const teamViewGridProps = { ...this.props, teams: value ? results : this.props.teams };\r\n    return (\r\n      <Grid centered>\r\n        <Grid.Row>\r\n          <Search\r\n            loading={isLoading}\r\n            onSearchChange={_.debounce(this.handleSearchChange, 300, {\r\n              leading: true,\r\n            })}\r\n            results={results}\r\n            value={value}\r\n            open={false}\r\n            input={{ placeholder: 'Wyszukaj po nazwie drużyny lub gracza' }}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <TeamViewGrid {...teamViewGridProps} />\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamViewGridWithSearch;\r\n","import React from 'react';\r\nimport { Table, Icon, Label, Modal } from 'semantic-ui-react';\r\nimport { formatDate } from '../../utils/date';\r\nimport AskModal from '../Modals/AskModal';\r\nimport setHeaders from '../../utils/setHeaders';\r\nimport TeamViewGridWithSearch from '../Teams/TeamViewGridWithSearch';\r\nimport axios from 'axios';\r\n\r\nconst unpackPlayers = teams => {\r\n  const name = localStorage.getItem('id');\r\n  const unpackPlayer = team => {\r\n    return team.players.first === name ? team.players.second : team.players.first;\r\n  };\r\n  for (let team of teams) {\r\n    team.player = unpackPlayer(team);\r\n  }\r\n  return teams;\r\n};\r\n\r\nclass TeamViewModal extends React.Component {\r\n  state = {\r\n    askModalProps: {\r\n      open: false,\r\n    },\r\n  };\r\n\r\n  openModalFactory = team => () => {\r\n    this.setState({\r\n      askModalProps: {\r\n        header: `Czy chcesz się zapisać zespołem ${team.name} do ligi ${this.props.league.name}?`,\r\n        positive: 'Tak',\r\n        negative: 'Nie',\r\n        open: true,\r\n        onClose: this.closeModal,\r\n        onPositive: () => {\r\n          axios({\r\n            url: `/api/leagues/${this.props.league.name}/team`,\r\n            method: 'POST',\r\n            ...setHeaders(),\r\n            data: { id: team._id },\r\n          })\r\n            .then(() => {\r\n              this.props.refresh();\r\n            })\r\n            .finally(() => {\r\n              this.props.onClose();\r\n            });\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ askModalProps: { open: false } });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal open={this.props.open} onClose={this.props.onClose} closeOnDimmerClick={false} closeIcon>\r\n        <Modal.Header>Wybierz drużynę</Modal.Header>\r\n        <Modal.Content scrolling>\r\n          <TeamViewGridWithSearch columns={3} teams={this.props.teams} onClickFactory={this.openModalFactory} />\r\n        </Modal.Content>\r\n        <AskModal {...this.state.askModalProps} />;\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass LeaguesTableRowOpen extends React.Component {\r\n  state = {\r\n    isModalOpen: false,\r\n    teams: [],\r\n  };\r\n\r\n  openModal = () => {\r\n    axios\r\n      .get(`/api/users/${localStorage.getItem('id')}/teams`, setHeaders())\r\n      .then(resp => resp.data)\r\n      .then(teams => this.setState({ teams: unpackPlayers(teams), isModalOpen: true }));\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ isModalOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const { data, refresh } = this.props;\r\n    const dateCreated = formatDate(data.date.created);\r\n    return (\r\n      <Table.Row>\r\n        <Table.Cell>{data.name}</Table.Cell>\r\n        <Table.Cell>{data.description}</Table.Cell>\r\n        <Table.Cell>{data.owner}</Table.Cell>\r\n        <Table.Cell>{dateCreated}</Table.Cell>\r\n        <Table.Cell>{data.teams.length}</Table.Cell>\r\n        <Table.Cell textAlign=\"left\">\r\n          {data.isUserInLeague ? (\r\n            <Label color=\"green\" ribbon=\"right\">\r\n              <Icon name=\"thumbs up\" size=\"large\" />\r\n              {data.userTeamInLeague}\r\n            </Label>\r\n          ) : (\r\n            <Label as=\"a\" color=\"blue\" ribbon=\"right\" onClick={this.openModal}>\r\n              <Icon name=\"hand pointer\" size=\"large\" />\r\n              Dołącz\r\n            </Label>\r\n          )}\r\n        </Table.Cell>\r\n        <TeamViewModal\r\n          open={this.state.isModalOpen}\r\n          onClose={this.closeModal}\r\n          league={data}\r\n          teams={this.state.teams}\r\n          refresh={refresh}\r\n        />\r\n      </Table.Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaguesTableRowOpen;\r\n","import React from 'react';\r\nimport { Table, Icon, Label } from 'semantic-ui-react';\r\nimport { formatDate } from '../../utils/date';\r\n\r\nclass LeaguesTableRowPending extends React.Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    const dateCreated = formatDate(data.date.created);\r\n    const dateStarted = formatDate(data.date.started);\r\n    return (\r\n      <Table.Row>\r\n        <Table.Cell>{data.name}</Table.Cell>\r\n        <Table.Cell>{data.description}</Table.Cell>\r\n        <Table.Cell>{data.owner}</Table.Cell>\r\n        <Table.Cell>{dateCreated}</Table.Cell>\r\n        <Table.Cell>{dateStarted}</Table.Cell>\r\n        <Table.Cell>{data.teams.length}</Table.Cell>\r\n        <Table.Cell textAlign=\"left\">\r\n          <Label as=\"a\" color=\"blue\" ribbon=\"right\">\r\n            <Icon name=\"hand pointer\" size=\"large\" />\r\n            Akcja\r\n          </Label>\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaguesTableRowPending;\r\n","import React from 'react';\r\nimport { Table, Icon, Label } from 'semantic-ui-react';\r\nimport { formatDate } from '../../utils/date';\r\n\r\nclass LeaguesTableRowClosed extends React.Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    const dateCreated = formatDate(data.date.created);\r\n    const dateStarted = formatDate(data.date.started);\r\n    const dateClosed = formatDate(data.date.closed);\r\n    return (\r\n      <Table.Row>\r\n        <Table.Cell>{data.name}</Table.Cell>\r\n        <Table.Cell>{data.description}</Table.Cell>\r\n        <Table.Cell>{data.owner}</Table.Cell>\r\n        <Table.Cell>{dateCreated}</Table.Cell>\r\n        <Table.Cell>{dateStarted}</Table.Cell>\r\n        <Table.Cell>{dateClosed}</Table.Cell>\r\n        <Table.Cell textAlign=\"left\">\r\n          <Label as=\"a\" color=\"blue\" ribbon=\"right\">\r\n            <Icon name=\"hand pointer\" size=\"large\" />\r\n            Akcja\r\n          </Label>\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaguesTableRowClosed;\r\n","import React from 'react';\r\nimport { Table, Icon, Label } from 'semantic-ui-react';\r\nimport { formatDate } from '../../utils/date';\r\n\r\nclass LeaguesTableRowOwner extends React.Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    const dateCreated = formatDate(data.date.created);\r\n    const dateStarted = formatDate(data.date.started);\r\n    const dateClosed = formatDate(data.date.closed);\r\n    return (\r\n      <Table.Row>\r\n        <Table.Cell>{data.name}</Table.Cell>\r\n        <Table.Cell>{data.description}</Table.Cell>\r\n        <Table.Cell>{dateCreated}</Table.Cell>\r\n        <Table.Cell>{dateStarted}</Table.Cell>\r\n        <Table.Cell>{dateClosed}</Table.Cell>\r\n        <Table.Cell>{data.status}</Table.Cell>\r\n        <Table.Cell>{data.teams.length}</Table.Cell>\r\n        <Table.Cell textAlign=\"left\">\r\n          <Label as=\"a\" color=\"blue\" ribbon=\"right\">\r\n            <Icon name=\"hand pointer\" size=\"large\" />\r\n            Akcja\r\n          </Label>\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaguesTableRowOwner;\r\n","import React from 'react';\r\nimport Teams from './Teams';\r\n// import { Message, Table } from 'semantic-ui-react';\r\n\r\n// import setHeaders from '../../utils/setHeaders';\r\n// import Leagues from '../../Views/Leagues';\r\nimport {\r\n  LeaguesTable,\r\n  LeaguesTableRowClosed,\r\n} from '../../components/Leagues';\r\n\r\nimport Store from '../../Store';\r\n\r\nclass LeaguesTableInTeamView extends LeaguesTable {\r\n\r\n  fetchLeagues = () => {\r\n    // return this.props.query().then(resp => resp.json());\r\n    // console.log( 'query->', this.props.query() );\r\n    return this.props.query();\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    // this.fetchLeagues().then(leagues => this.setState({ leagues }));\r\n    this.setState( () => { return { leagues: this.fetchLeagues() }; } )\r\n    // console.log('LeaguesTableInTeamView->', this.props);\r\n  };\r\n\r\n}\r\n\r\nconst LeaguesTableClosed = (leagues) => {\r\n  const config = {\r\n    headers: [\r\n      { width: 3, name: 'Nazwa' },\r\n      { width: 3, name: 'Opis' },\r\n      { width: 2, name: 'Twórca' },\r\n      { width: 2, name: 'Data utworzenia' },\r\n      { width: 2, name: 'Data rozpoczęcia' },\r\n      { width: 2, name: 'Data zakończenia' },\r\n      { width: 2, name: 'Wyniki' },\r\n    ],\r\n    // query: () => fetch('/api/leagues/?status=closed', setHeaders()),\r\n    query: () => { return leagues; },\r\n    row: LeaguesTableRowClosed,\r\n  };\r\n  // return <LeaguesTable {...config} />;\r\n  return <LeaguesTableInTeamView {...config} />;\r\n};\r\n\r\n\r\nclass ComponentTeamViewLeagues extends Teams {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  static contextType = Store;\r\n\r\n  render() {\r\n    // console.log('ComponentTeamViewLeagues.render()->', this.props.leagues);\r\n    // return(\r\n    // //   <Message info>\r\n    // //   <p>Są jakieś ligi</p>\r\n    // // </Message>\r\n    //   <></>\r\n    // )\r\n    return LeaguesTableClosed(this.props.leagues);\r\n  };\r\n\r\n}\r\n\r\nexport default ComponentTeamViewLeagues;\r\n","import React from 'react';\r\nimport Teams from './Teams';\r\nimport ComponentTeamViewLeagues from './TeamViewLeagues'\r\nimport { Form, Segment, Label, Input, Table, Divider, Header, Icon, Message } from 'semantic-ui-react';\r\nimport Store from '../../Store';\r\n\r\nclass TeamView extends Teams {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.state = { \r\n      isMe: false,\r\n      editable: false,\r\n      term: '',\r\n      team: '',\r\n      teamId: 0,\r\n      players: {\r\n        first: { \r\n          _id: '', \r\n          name: ''\r\n        },\r\n        second: { \r\n          _id: '',\r\n          name: '' \r\n        }\r\n      },\r\n      statistics: {\r\n        matches: { \r\n          won: 0, \r\n          lost: 0\r\n        },\r\n        goals: { \r\n          for: 0,\r\n          against: 0 \r\n        }\r\n      },\r\n      leagues: []\r\n    };\r\n\r\n    this.teams = [];\r\n    this.teamsAll = [];\r\n\r\n    this._gt('forSelect');  // wypełnia tablicę this.teams\r\n    this._gt('all');  // wypełnia tablicę this.teamsAll\r\n\r\n  }\r\n\r\n  static contextType = Store;\r\n\r\n  componentDidMount() {\r\n    this.setState( () => { return { isMe: !!this.context.me }; } );\r\n    // console.log('TeamsView->', this.context);\r\n  }\r\n\r\n  onSelectChange = (e, { value, name }) => {\r\n    const index = this.teams.map( (el) => { return el.value; } ).indexOf(value);\r\n    const id = this.teams[ index ].key\r\n    const teamsAllIndex = this.teamsAll.map( (el) => { return el._id; } ).indexOf(id); \r\n    const players = this.teamsAll[teamsAllIndex].players;\r\n    const stats = this.teamsAll[teamsAllIndex].statistics;\r\n    const leagues = this.teamsAll[teamsAllIndex].leagues;\r\n    this.setState( () => { return { \r\n      team: value,\r\n      errHeader: '',\r\n      errMessage: '',\r\n      teamId: id,\r\n      players: {\r\n        first: {\r\n          _id: players.first._id,\r\n          name: `${players.first.surname || '(brak)'}, ${players.first.name || '(brak)'}`\r\n        },\r\n        second: {\r\n          _id: players.second._id,\r\n          name: `${players.second.surname || '(brak)'}, ${players.second.name || '(brak)'}`\r\n        }\r\n      },\r\n      statistics: {\r\n        matches: { \r\n          won: stats.matches.won || 0, \r\n          lost: stats.matches.lost || 0\r\n        },\r\n        goals: { \r\n          for: stats.goals.for || 0,\r\n          against: stats.goals.against || 0 \r\n        }\r\n      },\r\n      leagues: leagues\r\n    }})\r\n  }\r\n\r\n  onClickEdit = (e, d) => {\r\n    this.setState( () => { return { editable: !this.state.editable }; } )\r\n  }\r\n\r\n  onClickCancel = (e, d) => {\r\n    if (this.state.editable) {\r\n      this.setState( () => { return { editable: false }; } )\r\n    }\r\n  }\r\n\r\n  onFormSubmit = (e, d) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Segment.Group horizontal width={12}>\r\n        <Segment>\r\n          <Form onSubmit={this.onFormSubmit}></Form>\r\n            <Form.Group>\r\n              <Form.Field>\r\n                <Label>Zgłoszone drużyny</Label>\r\n                {/* <Form.Group> */}\r\n                <Form.Dropdown \r\n                  key=\"teamsSelect\"\r\n                  name=\"teamsSelect\"\r\n                  // placeholder=\"puknij gracza nr 1...\"    // potrzebne, kiedy nie ma domyślnej wartości\r\n                  selection value={this.state.team} \r\n                  options={ this.teams } \r\n                  onChange={ (e, v) => this.onSelectChange(e, v) } \r\n                />\r\n                {/* </Form.Group> */}\r\n              </Form.Field>\r\n            </Form.Group>\r\n        </Segment>\r\n        <Segment>\r\n          {/* <Input \r\n            label=\"_id:\"\r\n            value={ this.state.teamId } \r\n            readOnly={ true }\r\n          />\r\n          <br />\r\n          <br /> */}\r\n          <Form.Group>\r\n            <Divider horizontal>\r\n              <Header as='h4'>\r\n                <Icon name='group' />\r\n                Gracze\r\n              </Header>\r\n            </Divider>\r\n            <Input \r\n              label=\"Gracz 1:\"\r\n              value={ this.state.players.first.name }\r\n              readOnly={ true }\r\n            />\r\n            <Input \r\n              label=\"Gracz 2:\"\r\n              value={ this.state.players.second.name }\r\n              readOnly={ true }\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Divider horizontal>\r\n            <Header as='h4'>\r\n              <Icon name='columns' />\r\n              Ligi\r\n            </Header>\r\n          </Divider>\r\n          {this.state.leagues.length === 0 && (\r\n            <Message info>\r\n              <p>Wygląda na to, że drużyny nie przypisano do żadnej ligi</p>\r\n            </Message>\r\n          )}\r\n          {this.state.leagues.length !== 0 && (\r\n            <ComponentTeamViewLeagues leagues={this.state.leagues}/>\r\n          )}\r\n          <br />\r\n          <Divider horizontal>\r\n            <Header as='h4'>\r\n              <Icon name='bar chart' />\r\n              Statystyka\r\n            </Header>\r\n          </Divider>\r\n          <Table celled textAlign={\"center\"}>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell colSpan={2}>Mecze</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan={2}>Bramki</Table.HeaderCell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.HeaderCell>Wygrane</Table.HeaderCell>\r\n                <Table.HeaderCell>Przegrane</Table.HeaderCell>\r\n                <Table.HeaderCell>Zdobyte</Table.HeaderCell>\r\n                <Table.HeaderCell>Stracone</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              <Table.Row>\r\n                <Table.Cell>{this.state.statistics.matches.won}</Table.Cell>\r\n                <Table.Cell>{this.state.statistics.matches.lost}</Table.Cell>\r\n                <Table.Cell>{this.state.statistics.goals.for}</Table.Cell>\r\n                <Table.Cell>{this.state.statistics.goals.against}</Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n            {/* <Table.Footer>\r\n              <Table.Row>\r\n                <Table.HeaderCell>sum</Table.HeaderCell>\r\n                <Table.HeaderCell>sum</Table.HeaderCell>\r\n                <Table.HeaderCell>sum</Table.HeaderCell>\r\n                <Table.HeaderCell>sum</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer> */}\r\n          </Table>\r\n        </Segment>\r\n      </Segment.Group>\r\n      <Form>\r\n        <Form.Group>\r\n          { !this.state.editable && <Form.Button name=\"btnEdit\" onClick={this.onClickEdit}>Edytuj</Form.Button> }\r\n          { this.state.editable && (\r\n            <>\r\n              <Form.Button name=\"btnSave\" onClick={this.onFormSubmit}>Zapisz</Form.Button>\r\n              <Form.Button name=\"btnCancel\" onClick={this.onClickCancel}>Anuluj</Form.Button>\r\n            </>\r\n          ) }\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  )\r\n  };\r\n}\r\n\r\nexport default TeamView;\r\n","import React from 'react';\r\nimport { Grid, Menu, Header, Icon, Segment, Message } from 'semantic-ui-react';\r\nimport Teams from './Teams';\r\nimport TeamCreate from './TeamCreate';\r\nimport TeamView from './TeamView';\r\nimport Store from '../../Store';\r\n\r\nclass ComponentTeams extends Teams {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      term: '',\r\n      activeItem: 'przejrzyj',\r\n      isMe: false\r\n    };\r\n  }\r\n\r\n  static contextType = Store;\r\n\r\n  componentDidMount() {\r\n    // console.log('index->', this.context);\r\n    this.setState( () => { return { isMe: !!this.context.me }; } );\r\n  }\r\n\r\n  onInputChange = e => {\r\n    this.props.onChange(this.state.term);\r\n  };\r\n\r\n  onSelectChange = (e, { value, name }) => {\r\n    this.props.onChange(this.state.term);\r\n  };\r\n\r\n  onFormSubmit = () => {\r\n    this.props.onSubmit(this.state.term);\r\n  };\r\n\r\n  onClickCancel = () => {\r\n    this.props.onSubmit(this.state.term);\r\n  };\r\n\r\n  handleItemClick = (e, { name }) =>\r\n    this.setState(() => {\r\n      return { activeItem: name };\r\n    });\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n    return (\r\n      <div className=\"container\" style={{ textAlign: 'left' }}>\r\n        <Header as=\"h2\" textAlign=\"center\" style={{ paddingLeft: '40px' }}>\r\n          <Icon name=\"group\" />\r\n          <Header.Content>Zarządzanie drużynami</Header.Content>\r\n        </Header>\r\n\r\n        {!this.state.isMe && (\r\n          <Segment>Zrób coś, bo nie widać \"<i>context.me</i>\"</Segment>\r\n        )}\r\n\r\n        {this.state.isMe && (\r\n          <Message>\r\n            <p>\r\n              Jeseś zalogowany jako: <strong>{this.context.me._id}</strong>, \r\n              rola: <strong>{this.context.me.role}</strong>, \r\n              dywizja: <strong>{this.context.me.division}</strong>\r\n            </p> \r\n          </Message>\r\n        )}\r\n\r\n        <Segment>\r\n          <Grid>\r\n            <Grid.Column stretched width={2}>\r\n              <Menu fluid vertical tabular>\r\n                <Menu.Item name=\"przejrzyj\" active={activeItem === 'przejrzyj'} onClick={this.handleItemClick} />\r\n                <Menu.Item name=\"dodaj\" active={activeItem === 'dodaj'} onClick={this.handleItemClick} />\r\n              </Menu>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column stretched width={14}>\r\n              { (this.state.activeItem === 'dodaj') && <TeamCreate /> }\r\n              { (this.state.activeItem === 'przejrzyj') && <TeamView /> }\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Teams, ComponentTeams };\r\n","import React from 'react';\r\nimport { ComponentTeams } from '../../components/Teams';\r\n\r\nconst Teams = () => {\r\n  return <ComponentTeams />;\r\n};\r\n\r\nexport default Teams;\r\n","import React from 'react';\r\nimport { Route, NavLink, Redirect, Switch } from 'react-router-dom';\r\nimport PrivateRoute from '../PrivateRoute';\r\nimport { Grid, Menu } from 'semantic-ui-react';\r\n\r\nconst SubPageRouter = props => {\r\n  return (\r\n    <Switch>\r\n      {props.routing.map(x => (\r\n        <PrivateRoute key={x.path} path={x.path} component={x.component} />\r\n      ))}\r\n      <Route render={() => <Redirect to={props.routing[0].path || '/'} />} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nconst SubPageMenu = props => {\r\n  return (\r\n    <Menu fluid vertical tabular>\r\n      {props.routing.map(x => (\r\n        <Menu.Item key={x.path} as={NavLink} name={x.name} to={x.path} activeClassName=\"active\" />\r\n      ))}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst SubPage = props => {\r\n  return (\r\n    <div>\r\n      <Grid>\r\n        <Grid.Column width={3}>\r\n          <SubPageMenu routing={props.routing} />\r\n        </Grid.Column>\r\n        <Grid.Column stretched width={13}>\r\n          <SubPageRouter routing={props.routing} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubPage;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport SubPage from '../../components/SubPage';\r\nimport setHeaders from '../../utils/setHeaders';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport {\r\n  LeaguesTable,\r\n  LeaguesTableRowOpen,\r\n  LeaguesTableRowPending,\r\n  LeaguesTableRowClosed,\r\n  LeaguesTableRowOwner,\r\n} from '../../components/Leagues';\r\n\r\nconst queryLeaguesTableOpen = async () => {\r\n  const isUserInLeague = (league, user = localStorage.getItem('id')) => {\r\n    for (let { team } of league.teams) {\r\n      if (user === team.players.first || user === team.players.second) {\r\n        return [true, team.name];\r\n      }\r\n    }\r\n    return [false, ''];\r\n  };\r\n  const leagues = await axios.get('/api/leagues/?status=created&with=[\"team\"]', setHeaders()).then(resp => resp.data);\r\n  for (let league of leagues) {\r\n    const [inLeague, teamName] = isUserInLeague(league);\r\n    league['isUserInLeague'] = inLeague;\r\n    league['userTeamInLeague'] = teamName;\r\n  }\r\n  return leagues;\r\n};\r\n\r\nconst LeaguesTableOpen = () => {\r\n  const config = {\r\n    headers: [\r\n      { width: 3, name: 'Nazwa' },\r\n      { width: 4, name: 'Opis' },\r\n      { width: 3, name: 'Twórca' },\r\n      { width: 3, name: 'Data utworzenia' },\r\n      { width: 1, name: 'Zapisanych drużyn' },\r\n      { width: 2, name: 'Drużyna' },\r\n    ],\r\n    query: queryLeaguesTableOpen,\r\n    row: LeaguesTableRowOpen,\r\n  };\r\n  return <LeaguesTable {...config} />;\r\n};\r\n\r\nconst LeaguesTablePending = () => {\r\n  const config = {\r\n    headers: [\r\n      { width: 3, name: 'Nazwa' },\r\n      { width: 3, name: 'Opis' },\r\n      { width: 3, name: 'Twórca' },\r\n      { width: 2, name: 'Data utworzenia' },\r\n      { width: 2, name: 'Data rozpoczęcia' },\r\n      { width: 1, name: 'Zapisanych drużyn' },\r\n      { width: 2, name: 'Info' },\r\n    ],\r\n    query: () => axios.get('/api/leagues/?status=pending', setHeaders()).then(resp => resp.data),\r\n    row: LeaguesTableRowPending,\r\n  };\r\n  return <LeaguesTable {...config} />;\r\n};\r\n\r\nconst LeaguesTableClosed = () => {\r\n  const config = {\r\n    headers: [\r\n      { width: 3, name: 'Nazwa' },\r\n      { width: 3, name: 'Opis' },\r\n      { width: 2, name: 'Twórca' },\r\n      { width: 2, name: 'Data utworzenia' },\r\n      { width: 2, name: 'Data rozpoczęcia' },\r\n      { width: 2, name: 'Data zakończenia' },\r\n      { width: 2, name: 'Wyniki' },\r\n    ],\r\n    query: () => axios.get('/api/leagues/?status=closed', setHeaders()).then(resp => resp.data),\r\n    row: LeaguesTableRowClosed,\r\n  };\r\n  return <LeaguesTable {...config} />;\r\n};\r\n\r\nconst LeaguesTableOwner = () => {\r\n  const config = {\r\n    headers: [\r\n      { width: 2, name: 'Nazwa' },\r\n      { width: 2, name: 'Opis' },\r\n      { width: 2, name: 'Data utworzenia' },\r\n      { width: 2, name: 'Data rozpoczęcia' },\r\n      { width: 2, name: 'Data zakończenia' },\r\n      { width: 2, name: 'Status' },\r\n      { width: 2, name: 'Drużyny' },\r\n      { width: 2, name: 'Akcje' },\r\n    ],\r\n    query: () => axios.get('/api/leagues/?status=owner', setHeaders()).then(resp => resp.data),\r\n    row: LeaguesTableRowOwner,\r\n  };\r\n  return <LeaguesTable {...config} />;\r\n};\r\n\r\nconst Leagues = props => {\r\n  const path = props.match.path;\r\n  const routing = [\r\n    { name: 'Otwarte', path: `${path}/Open`, component: LeaguesTableOpen },\r\n    { name: 'Trwające', path: `${path}/Pending`, component: LeaguesTablePending },\r\n    { name: 'Zakończone', path: `${path}/Closed`, component: LeaguesTableClosed },\r\n    { name: 'Moje', path: `${path}/Owner`, component: LeaguesTableOwner },\r\n  ];\r\n\r\n  return (\r\n    <Segment>\r\n      {' '}\r\n      <SubPage routing={routing} />{' '}\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default Leagues;\r\n","import React from 'react';\r\n\r\nconst Schedule = () => {\r\n  return <div>Schedule</div>;\r\n};\r\n\r\nexport default Schedule;\r\n","import React from 'react';\r\nimport { Dimmer, Loader as SemanticLoader } from 'semantic-ui-react';\r\n\r\nconst Loader = ({ text = '' }) => {\r\n  return (\r\n    <Dimmer active>\r\n      <SemanticLoader content={text} />\r\n    </Dimmer>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Form, Input, TextArea, Button } from 'semantic-ui-react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nclass NewLeague extends React.Component {\r\n  state = {\r\n    name: '',\r\n    description: '',\r\n    startDate: '',\r\n    postSuccessful: false,\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleDateChange = date => {\r\n    this.setState({\r\n      startDate: date,\r\n    });\r\n  };\r\n\r\n  onFormSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    await axios({\r\n      url: '/api/leagues',\r\n      method: 'post',\r\n      data: {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        date: { started: this.state.startDate },\r\n      },\r\n      headers: {\r\n        'x-auth-token': localStorage.getItem('token'),\r\n      },\r\n    })\r\n      .then(postLeague => {\r\n        alert(`Założone!!\r\n            ${postLeague.data.owner.name} - jesteś sędzią głównym w lidze: ${postLeague.data.name}`);\r\n        this.setState({ postSuccessful: true });\r\n      })\r\n      .catch(postLeague => {\r\n        alert(postLeague.response.data[0].message || postLeague.response.data);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.postSuccessful) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <Form onSubmit={this.onFormSubmit}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input\r\n              name=\"name\"\r\n              maxLength=\"30\"\r\n              control={Input}\r\n              label=\"Nazwa\"\r\n              placeholder=\"Jak nazwiesz ligę?\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <DatePicker\r\n              control={Form.Input}\r\n              selected={this.state.startDate}\r\n              onChange={this.handleDateChange}\r\n              minDate={Date.now()}\r\n              label=\"Data startu\"\r\n              placeholderText=\"Kiedy zaczynacie?\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Input\r\n            name=\"description\"\r\n            control={TextArea}\r\n            maxLength=\"255\"\r\n            label=\"Opis (opcjonalny)\"\r\n            placeholder=\"Dodaj kilka słów, jeśli chcesz\"\r\n            onChange={this.handleInputChange}\r\n            // value={this.state.description}\r\n          />\r\n          <Button type=\"submit\" id=\"submit\" content=\"Załóż\" />\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewLeague;\r\n","import React from 'react';\r\nimport NewLeague from '../../components/NewLeague';\r\n\r\nconst CreateLeague = () => {\r\n  return <NewLeague />;\r\n};\r\n\r\nexport default CreateLeague;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Store from '../../Store';\r\n\r\nclass Scores extends React.Component {\r\n  static contextType = Store;\r\n\r\n  async getLeagues(resType = 'names') {\r\n    let ret;\r\n    await axios({\r\n      url: '/api/leagues/',\r\n      method: 'get',\r\n      data: {},\r\n      headers: {\r\n        'x-auth-token': localStorage.token,\r\n      },\r\n    }).then(\r\n      res => {\r\n        switch (resType) {\r\n          case 'names':\r\n            ret = res.data.map(el => el.name);\r\n            break;\r\n          case 'forSelect':\r\n            ret = res.data.map(el => {\r\n              return {\r\n                key: el._id,\r\n                value: el.name,\r\n                text: el.name,\r\n              };\r\n            });\r\n            break;\r\n          case 'all':\r\n            ret = res.data;\r\n            break;\r\n          default:\r\n            ret = res.data.map(el => el.name);\r\n        }\r\n      },\r\n      err => {\r\n        console.log('Error taki:', err.errmsg);\r\n      },\r\n    );\r\n    return ret;\r\n  }\r\n\r\n  gl = async type => {\r\n    try {\r\n      let ret = await this.getLeagues(type);\r\n      switch (type) {\r\n        case 'forSelect':\r\n          this.league = ret.sort((a, b) => (a.text.toLowerCase() < b.text.toLowerCase() ? -1 : 1));\r\n          this.setState(() => {\r\n            return {\r\n              league: this.league[0].text,\r\n              leagueId: this.league[0].key,\r\n            };\r\n          });\r\n          break;\r\n        case 'all':\r\n          this.leagueAll = ret.sort((a, b) => (a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1));\r\n          if (this.leagueAll[0].teams.length > 0) {\r\n            for (let i = 0; i < this.leagueAll[0].teams.length; i++) {\r\n              let actualTeam = this.leagueAll[0].teams[i];\r\n              this.setState(() => {\r\n                return {\r\n                  data: [\r\n                    ...this.state.data,\r\n                    {\r\n                      team: actualTeam.team.name,\r\n                      points: actualTeam.statistics.matches.won * 3,\r\n                      matchesPlayed: actualTeam.statistics.matches.won + actualTeam.statistics.matches.lost,\r\n                      matchesWon: actualTeam.statistics.matches.won,\r\n                      matchesLost: actualTeam.statistics.matches.lost,\r\n                      goalsFor: actualTeam.statistics.goals.for,\r\n                      goalsAgainst: actualTeam.statistics.goals.against,\r\n                    },\r\n                  ],\r\n                };\r\n              });\r\n            }\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } catch (e) {\r\n      console.log('gl: Błąd', e);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Scores;\r\n","import React from 'react';\r\nimport Scores from './Scores';\r\nimport _ from 'lodash';\r\nimport { Form, Segment, Label, Header, Icon, Table } from 'semantic-ui-react';\r\n\r\nclass ScoresView extends Scores {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      column: null,\r\n      direction: null,\r\n      league: '',\r\n      data: [\r\n        {\r\n          team: 'Brak drużyn w lidze',\r\n          points: 0,\r\n          matchesPlayed: 0,\r\n          matchesWon: 0,\r\n          matchesLost: 0,\r\n          goalsFor: 0,\r\n          goalsAgainst: 0,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.league = [];\r\n    this.leagueAll = [];\r\n    this.gl('forSelect');\r\n    this.gl('all');\r\n  }\r\n\r\n  handleSort = clickedColumn => () => {\r\n    const { column, data, direction } = this.state;\r\n\r\n    if (column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        data: _.sortBy(data, [clickedColumn]),\r\n        direction: 'ascending',\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      data: data.reverse(),\r\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\r\n    });\r\n  };\r\n\r\n  onSelectChange = (e, { value }) => {\r\n    const index = this.league.map(el => el.value).indexOf(value);\r\n    const id = this.league[index].key;\r\n    const leagueAllIndex = this.leagueAll.map(el => el._id).indexOf(id);\r\n\r\n    const teams = this.leagueAll[leagueAllIndex].teams;\r\n    this.prepareState(teams);\r\n\r\n    if (teams.length > 0) {\r\n      this.setState(() => {\r\n        return {\r\n          league: value,\r\n          data: this.state.data,\r\n        };\r\n      });\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          league: value,\r\n          data: [\r\n            {\r\n              team: 'Brak drużyn w lidze',\r\n              points: 0,\r\n              matchesPlayed: 0,\r\n              matchesWon: 0,\r\n              matchesLost: 0,\r\n              goalsFor: 0,\r\n              goalsAgainst: 0,\r\n            },\r\n          ],\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  prepareState = teams => {\r\n    for (let i = 0; i < teams.length; i++) {\r\n      const stats = teams[i].statistics;\r\n      const team = teams[i].team;\r\n      if (i === 0) {\r\n        this.state.data = [this.newStateData(team, stats)];\r\n      } else {\r\n        this.state.data = [...this.state.data, this.newStateData(team, stats)];\r\n      }\r\n    }\r\n  };\r\n\r\n  newStateData = (team, stats) => {\r\n    return {\r\n      team: team.name,\r\n      points: stats.matches.won * 3,\r\n      matchesPlayed: stats.matches.won + stats.matches.lost,\r\n      matchesWon: stats.matches.won,\r\n      matchesLost: stats.matches.lost,\r\n      goalsFor: stats.goals.for,\r\n      goalsAgainst: stats.goals.against,\r\n    };\r\n  };\r\n\r\n  onFormSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { column, data, direction } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\" style={{ textAlign: 'left' }}>\r\n        <Header as=\"h2\" textAlign=\"center\" style={{ paddingLeft: '40px' }}>\r\n          <Icon name=\"ordered list\" />\r\n          <Header.Content>Przejrzyj wyniki</Header.Content>\r\n        </Header>\r\n\r\n        <Segment>\r\n          <Form onSubmit={this.onFormSubmit}></Form>\r\n          <Form.Group>\r\n            <Form.Field>\r\n              <Label>Lista lig</Label>\r\n              <Form.Dropdown\r\n                key=\"leagueSelect\"\r\n                name=\"leagueSelect\"\r\n                selection\r\n                value={this.state.league}\r\n                options={this.league}\r\n                onChange={(e, v) => this.onSelectChange(e, v)}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n        </Segment>\r\n\r\n        <Table sortable celled fixed>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell sorted={column === 'team' ? direction : null} onClick={this.handleSort('team')}>\r\n                Nazwa Drużyny\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell sorted={column === 'points' ? direction : null} onClick={this.handleSort('points')}>\r\n                Punkty\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === 'matchesPlayed' ? direction : null}\r\n                onClick={this.handleSort('matchesPlayed')}\r\n              >\r\n                Rozegrane mecze\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === 'matchesWon' ? direction : null}\r\n                onClick={this.handleSort('matchesWon')}\r\n              >\r\n                Wygrane mecze\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === 'matchesLost' ? direction : null}\r\n                onClick={this.handleSort('matchesLost')}\r\n              >\r\n                Przegrane mecze\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell sorted={column === 'goalsFor' ? direction : null} onClick={this.handleSort('goalsFor')}>\r\n                Strzelone bramki\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === 'goalsAgainst' ? direction : null}\r\n                onClick={this.handleSort('goalsAgainst')}\r\n              >\r\n                Stracone bramki\r\n              </Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {_.map(data, ({ team, points, matchesPlayed, matchesWon, matchesLost, goalsFor, goalsAgainst }) => (\r\n              <Table.Row key={points}>\r\n                <Table.Cell>{team}</Table.Cell>\r\n                <Table.Cell>{points}</Table.Cell>\r\n                <Table.Cell>{matchesPlayed}</Table.Cell>\r\n                <Table.Cell>{matchesWon}</Table.Cell>\r\n                <Table.Cell>{matchesLost}</Table.Cell>\r\n                <Table.Cell>{goalsFor}</Table.Cell>\r\n                <Table.Cell>{goalsAgainst}</Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScoresView;\r\n","import React from 'react';\r\nimport ScoresView from '../../components/Scores/ScoresView';\r\n\r\nconst ShowScores = () => {\r\n  return <ScoresView />;\r\n};\r\n\r\nexport default ShowScores;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport Store, { StoreProvider } from './Store';\r\nimport setHeaders from './utils/setHeaders';\r\nimport AppBar from './components/AppBar';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport Home from './Views/Homepage';\r\nimport Login from './Views/Login';\r\nimport Teams from './Views/Teams';\r\nimport Leagues from './Views/Leagues';\r\nimport Schedule from './Views/Schedule';\r\nimport Loader from './components/Loader';\r\nimport NewLeague from './Views/NewLeague';\r\nimport ShowScores from './Views/Scores';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nconst App = () => {\r\n  const { isLogged, changeStore } = useContext(Store);\r\n  const [isLoading, setLoading] = useState(isLogged);\r\n\r\n  useEffect(() => {\r\n    if (!isLogged) return;\r\n    (async () => {\r\n      try {\r\n        const response = await fetch('/api/login/me', setHeaders());\r\n        if (response.status === 400) {\r\n          localStorage.removeItem('token');\r\n          changeStore('isLogged', false);\r\n          changeStore('me', null);\r\n          return;\r\n        }\r\n        const data = await response.json();\r\n        changeStore('isLogged', true);\r\n        changeStore('me', data);\r\n      } catch (ex) {\r\n        console.error('Serwer nie odpowiada'); //Tu wyświetlić coś userowi że nie ma połączenia z serwerem\r\n        console.error('Error', ex);\r\n      }\r\n    })();\r\n    setLoading(false);\r\n  }, [changeStore, isLogged]);\r\n  return (\r\n    <BrowserRouter>\r\n      <Container>\r\n        <AppBar />\r\n        {isLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <PrivateRoute path=\"/Schedule\" component={Schedule} />\r\n            <PrivateRoute path=\"/Leagues\" component={Leagues} />\r\n            <PrivateRoute path=\"/Teams\" component={Teams} />\r\n            <PrivateRoute exact path=\"/\" component={Home} />\r\n            <PrivateRoute exact path=\"/NewLeague\" component={NewLeague} />\r\n            <PrivateRoute exact path=\"/Scores\" component={ShowScores} />\r\n            <Route render={() => <Redirect to=\"/\" />} />\r\n          </Switch>\r\n        )}\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <StoreProvider>\r\n    <App />\r\n  </StoreProvider>,\r\n  document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}